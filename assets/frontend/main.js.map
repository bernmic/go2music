{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/age/age-decades.component.ts","./src/app/age/age-decades.component.html","./src/app/age/age-routing.module.ts","./src/app/age/age.module.ts","./src/app/age/age.service.ts","./src/app/album/album-cover.component.ts","./src/app/album/album-cover.new.component.ts","./src/app/album/album-cover-new.component.html","./src/app/album/album-detail.component.ts","./src/app/album/album-detail.component.html","./src/app/album/album-list-new.component.ts","./src/app/album/album-list-new.component.html","./src/app/album/album-list.component.ts","./src/app/album/album-list.component.html","./src/app/album/album-routing.module.ts","./src/app/album/album.model.ts","./src/app/album/album.module.ts","./src/app/album/album.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/artist/artist-detail.component.ts","./src/app/artist/artist-detail.component.html","./src/app/artist/artist-list.component.ts","./src/app/artist/artist-list.component.html","./src/app/artist/artist-new-list.component.ts","./src/app/artist/artist-new-list.component.html","./src/app/artist/artist-new.datasource.ts","./src/app/artist/artist-routing.module.ts","./src/app/artist/artist.datasource.ts","./src/app/artist/artist.model.ts","./src/app/artist/artist.module.ts","./src/app/artist/artist.service.ts","./src/app/config/config-routing.module.ts","./src/app/config/config.component.ts","./src/app/config/config.component.html","./src/app/config/config.model.ts","./src/app/config/config.module.ts","./src/app/config/config.service.ts","./src/app/genre/genre-list.component.ts","./src/app/genre/genre-list.component.html","./src/app/genre/genre-routing.module.ts","./src/app/genre/genre.module.ts","./src/app/genre/genre.service.ts","./src/app/management/management-routing.module.ts","./src/app/management/management.component.ts","./src/app/management/management.component.html","./src/app/management/management.module.ts","./src/app/management/management.service.ts","./src/app/overview/overview-routing.module.ts","./src/app/overview/overview.component.ts","./src/app/overview/overview.component.html","./src/app/overview/overview.module.ts","./src/app/overview/overview.service.ts","./src/app/player/play-queue.component.ts","./src/app/player/play-queue.component.html","./src/app/player/player.component.ts","./src/app/player/player.component.html","./src/app/player/player.dialog.ts","./src/app/player/player.dialog.html","./src/app/player/player.module.ts","./src/app/player/player.service.ts","./src/app/playlist/playlist-detail.component.ts","./src/app/playlist/playlist-detail.component.html","./src/app/playlist/playlist-routing.module.ts","./src/app/playlist/playlist.component.ts","./src/app/playlist/playlist.component.html","./src/app/playlist/playlist.model.ts","./src/app/playlist/playlist.module.ts","./src/app/playlist/playlist.service.ts","./src/app/security/auth-guard.service.ts","./src/app/security/auth.service.ts","./src/app/security/login.component.ts","./src/app/security/login.component.html","./src/app/security/security-routing.module.ts","./src/app/security/security.module.ts","./src/app/security/token.interceptor.ts","./src/app/shared/base.service.ts","./src/app/shared/duration.pipe.ts","./src/app/shared/paging.model.ts","./src/app/shared/shared.module.ts","./src/app/shared/textinput-dialog.component.ts","./src/app/shared/textinput-dialog.component.html","./src/app/shared/unixdate.pipe.ts","./src/app/shared/yesno-alert.component.ts","./src/app/shared/yesno-alert.component.html","./src/app/song/playlist-select-dialog.component.ts","./src/app/song/playlist-select-dialog.component.html","./src/app/song/song-list.component.ts","./src/app/song/song-list.component.html","./src/app/song/song-routing.module.ts","./src/app/song/song.datasource.ts","./src/app/song/song.model.ts","./src/app/song/song.module.ts","./src/app/song/song.service.ts","./src/app/user/user-detail.component.ts","./src/app/user/user-detail.component.html","./src/app/user/user-list.component.ts","./src/app/user/user-list.component.html","./src/app/user/user-routing.module.ts","./src/app/user/user.datasource.ts","./src/app/user/user.model.ts","./src/app/user/user.module.ts","./src/app/user/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {AgeService} from \"./age.service\";\nimport {Router} from \"@angular/router\";\nimport {NameCount} from \"../shared/namecount.model\";\n\n@Component({\n  selector: 'app-age-decades',\n  templateUrl: './age-decades.component.html',\n  styleUrls: ['./age-decades.component.scss']\n})\nexport class AgeDecadesComponent implements OnInit {\n\n  decadeMap: Map<string, NameCount[]> = new Map();\n  decades: NameCount[];\n\n  constructor(\n    private router: Router,\n    private ageService: AgeService\n  ) {}\n\n  ngOnInit() {\n    this.ageService.getDecades().subscribe(decades => this.decades = decades);\n  }\n\n  getYears(decade: string) {\n    this.ageService.getYears(decade).subscribe(years => this.decadeMap[decade] = years);\n  }\n\n  gotoSongs(year: string) {\n    this.router.navigate([\"/song/age/\" + year]);\n  }\n}\n","<div class=\"decades\">\n  <mat-accordion>\n    <mat-expansion-panel *ngFor=\"let decade of decades\" (opened)=\"getYears(decade.name)\">\n      <mat-expansion-panel-header>{{decade.name}} ({{decade.count}} songs)</mat-expansion-panel-header>\n      <ng-template matExpansionPanelContent>\n        <mat-list>\n          <a mat-list-item *ngFor=\"let year of decadeMap[decade.name]\" (click)=\"gotoSongs(year.name)\">{{year.name}} ({{year.count}} songs)</a>\n        </mat-list>\n      </ng-template>\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n","import {RouterModule, Routes} from \"@angular/router\";\nimport {AuthGuardService} from \"../security/auth-guard.service\";\nimport {NgModule} from \"@angular/core\";\nimport {AgeDecadesComponent} from \"./age-decades.component\";\n\nconst ageRoutes: Routes = [\n  {path: 'age', component: AgeDecadesComponent, canActivate: [AuthGuardService]}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(ageRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AgeRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {AgeDecadesComponent} from './age-decades.component';\nimport {AgeService} from \"./age.service\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {SharedModule} from \"../shared/shared.module\";\n\n\n@NgModule({\n  declarations: [\n    AgeDecadesComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    HttpClientModule,\n    MatExpansionModule,\n    MatListModule,\n    SharedModule\n  ],\n  exports: [\n    AgeDecadesComponent\n  ],\n  providers: [\n    AgeService\n  ]\n})\nexport class AgeModule {\n}\n","import {BaseService} from \"../shared/base.service\";\nimport {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {NameCount} from \"../shared/namecount.model\";\n\n@Injectable()\nexport class AgeService extends BaseService{\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  getDecades(): Observable<NameCount[]> {\n    return this.http.get<NameCount[]>(environment.restserver + \"/api/info/decades\");\n  }\n\n  getYears(decade: string): Observable<NameCount[]> {\n    return this.http.get<NameCount[]>(environment.restserver + \"/api/info/decades/\" + decade);\n  }\n}\n","import {Component, Input, OnInit} from \"@angular/core\";\nimport {Album} from \"./album.model\";\nimport {AlbumService} from \"./album.service\";\n\n@Component({\n  selector: 'album-cover',\n  template: `\n    <button routerLink=\"/song/album/{{album.albumId}}\">\n      <img [src]=\"coverUrl\" alt=\"{{album.title}}\" class=\"image\">\n      <div class=\"album-info\">{{album.title}}</div>\n    </button>`,\n  styles: [\n    '.image {position: relative; top: 0; left: 0; max-width: 100%; max-height: 100%; object-fit: contain;}',\n    '.album-info {position: absolute; background-color: rgba(255,255,255,0); color: rgba(0,0,0,0); width: 100%; left: 0px; bottom: 10px; z-index: 1000;}',\n    '.album-info:hover {background-color: rgba(255,255,255,0.7); color: rgba(0,0,0,1.0); }'\n  ]\n})\nexport class AlbumCoverComponent implements OnInit{\n\n  @Input() album: Album;\n  coverUrl: string;\n\n  constructor(private albumService: AlbumService) {\n    this.coverUrl = this.albumService.albumCoverUrl(this.album);\n  }\n\n  ngOnInit(): void {\n    this.coverUrl = this.albumService.albumCoverUrl(this.album);\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Album} from \"./album.model\";\nimport {AlbumService} from \"./album.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-album-cover-new',\n  templateUrl: './album-cover-new.component.html',\n  styleUrls: ['./album-cover-new.component.scss']\n})\nexport class AlbumCoverNewComponent implements OnInit{\n  @Input() album: Album;\n  cover: any;\n\n  constructor(private albumService: AlbumService, private router: Router) {}\n\n  ngOnInit() {\n    this.albumService.getCover(this.album).subscribe(\n      (res: any) => { this.cover = res; },\n      error => {\n        this.cover = \"/assets/img/defaultAlbum.png\";\n      }\n      )\n  }\n\n  gotoAlbum() {\n    //this.router.navigate([\"/song/album/\" + this.album.albumId]);\n    this.router.navigate([\"/album/\" + this.album.albumId]);\n  }\n}\n","<mat-card>\n  <img mat-card-image [src]=\"cover\" width=\"100%\" matTooltip=\"{{album.title}}\" (click)=\"gotoAlbum()\">\n</mat-card>\n","import {Component, OnInit} from \"@angular/core\";\nimport {AlbumService} from \"./album.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Playlist} from \"../playlist/playlist.model\";\nimport {Album} from \"./album.model\";\n\n@Component({\n  selector: 'app-album-detail',\n  templateUrl: './album-detail.component.html',\n  styleUrls: ['./album-detail.component.scss']\n})\nexport class AlbumDetailComponent implements OnInit {\n  albumInfo: any;\n  album: Album;\n  albumId: string;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private albumService: AlbumService) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params) => {\n      if (params.get('id') === null) {\n        return;\n      }\n      this.albumId = params.get(\"id\");\n      this.albumService.getAlbumInfo(params.get('id')).subscribe(a => {\n        this.album = a;\n        this.albumInfo = a.info;\n        this.albumId = a.albumId;\n      });\n    });\n  }\n\n  cover(size: string): string {\n    let album = new Album(this.albumId, \"\", \"\");\n    return this.albumService.albumCoverUrl(album);\n    if (this.albumInfo !== null && this.albumInfo !== undefined && this.albumInfo.image != null && this.albumInfo.image !== undefined) {\n      for (let image of this.albumInfo.image) {\n        if (image[\"size\"] === size) {\n          return image[\"#text\"];\n        }\n      }\n    }\n    return \"\";\n  }\n\n  artistClicked() {\n    this.router.navigate([\"/artist/\" + this.album.artist.artistId]);\n  }\n}\n","<mat-card class=\"album-card\">\n  <mat-card-header>\n    <mat-card-title>{{albumInfo?.name}}</mat-card-title>\n    <mat-card-subtitle (click)=\"artistClicked()\">{{albumInfo?.artist}}</mat-card-subtitle>\n  </mat-card-header>\n  <img mat-card-image src=\"{{cover('large')}}\">\n  <mat-card-content>\n    <p>\n      {{albumInfo?.wiki?.summary}} <a mat-button href=\"{{albumInfo?.url}}\" target=\"_blank\">Read more</a>\n    </p>\n    <mat-chip-list *ngIf=\"albumInfo?.tags\">\n      <mat-chip *ngFor=\"let tag of albumInfo?.tags.tag\">{{tag.name}}</mat-chip>\n    </mat-chip-list>\n  </mat-card-content>\n  <mat-card-actions>\n    <a mat-button routerLink=\"/song/album/{{albumId}}\">Songs</a>\n    <a mat-button *ngIf=\"albumInfo?.url\" href=\"{{albumInfo?.url}}\" target=\"_blank\">last.fm</a>\n  </mat-card-actions>\n</mat-card>\n","import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {AlbumService} from \"./album.service\";\nimport {Paging} from \"../shared/paging.model\";\nimport {Album} from \"./album.model\";\nimport {fromEvent} from \"rxjs\";\nimport {debounceTime, distinctUntilChanged, filter, map, tap} from \"rxjs/operators\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MediaChange, MediaObserver} from \"@angular/flex-layout\";\n\n@Component({\n  selector: 'app-album-list-new',\n  templateUrl: './album-list-new.component.html',\n  styleUrls: ['./album-list-new.component.scss']\n})\nexport class AlbumListNewComponent implements OnInit, AfterViewInit {\n  albums: Album[];\n  total = 0;\n  linesPerPage = 0;\n  columnsPerpage = 5;\n  pageSize = 5;\n  pageSizeOptions = [1, 2, 3, 4, 5, 6];\n  pageIndex = 0;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild('input', { static: true }) input: ElementRef;\n\n  constructor(private albumService: AlbumService, public mediaObserver: MediaObserver) {\n    mediaObserver.asObservable()\n      .pipe(\n        filter((changes: MediaChange[]) => changes.length > 0),\n        map((changes: MediaChange[]) => changes[0])\n      ).subscribe((change: MediaChange) => {\n      switch (change.mqAlias) {\n        case 'xs':\n          this.initPaginator(1);\n          break;\n        case 'sm':\n          this.initPaginator(3);\n          break;\n        case 'md':\n          this.initPaginator(4);\n          break;\n        case 'lg':\n          this.initPaginator(5);\n          break;\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.fetchAlbums(\"\", new Paging(0, this.pageSize, \"title\", \"asc\"));\n  }\n\n  initPaginator(numcols: number) {\n    if (this.linesPerPage === 0) {\n      if (localStorage.getItem(\"albumLinesPerPage\")) {\n        this.linesPerPage = +localStorage.getItem(\"albumLinesPerPage\");\n      } else {\n        this.linesPerPage = 1;\n      }\n    }\n    this.columnsPerpage = numcols;\n    this.pageSizeOptions = [1 * numcols, 2 * numcols, 3 * numcols, 4 * numcols, 5 * numcols, 6 * numcols];\n    this.pageSize = this.linesPerPage * numcols;\n  }\n\n  ngAfterViewInit(): void {\n    this.paginator.page.subscribe($event => {\n      this.linesPerPage = $event.pageSize / this.columnsPerpage;\n      localStorage.setItem(\"albumLinesPerPage\", \"\" + ($event.pageSize / this.columnsPerpage));\n      this.fetchAlbums(\"\", new Paging($event.pageIndex, $event.pageSize, \"title\", \"asc\"));\n    });\n\n    // server-side search\n    fromEvent(this.input.nativeElement, 'keyup')\n      .pipe(\n        debounceTime(150),\n        distinctUntilChanged(),\n        tap(() => {\n          this.paginator.pageIndex = 0;\n          this.fetchAlbums(this.input.nativeElement.value, new Paging(0, this.pageSize, \"title\", \"asc\"));\n        })\n      )\n      .subscribe();\n  }\n\n  fetchAlbums(filter: string, paging: Paging) {\n    this.albumService.getAllAlbums(filter, paging).subscribe(albums => {\n      this.albums = albums.albums;\n      this.total = albums.total;\n    });\n  }\n}\n","<div\n  gdAreas=\"header | content | footer\"\n  gdGap=\"16px\"\n  gdRows=\"auto auto auto\">\n  <div gdArea=\"header\">\n    <mat-form-field>\n      <mat-placeholder>\n        <mat-icon>search</mat-icon>\n      </mat-placeholder>\n      <input matInput #input>\n    </mat-form-field>\n  </div>\n  <div gdArea=\"content\">\n    <div class=\"album full-container\"\n         fxLayout=\"row wrap\"\n         fxLayout.lt-sm=\"column\"\n         fxLayoutGap=\"5px\"\n         fxLayoutAlign=\"flex-start\">\n      <ng-container *ngFor=\"let album of albums\">\n        <app-album-cover-new\n          [album]=\"album\"\n          fxFlex=\"0 1 calc(20% - 5px)\"\n          fxFlex.lt-lg=\"0 1 calc(25% - 5px)\"\n          fxFlex.lt-md=\"0 1 calc(33.3% - 5px)\"\n          fxFlex.lt-sm=\"0 1 calc(50% - 5px)\"\n        ></app-album-cover-new>\n      </ng-container>\n    </div>\n  </div>\n  <div gdArea=\"footer\">\n    <mat-paginator #paginator\n                   [length]=\"total\"\n                   [pageSize]=\"pageSize\"\n                   [pageIndex]=\"pageIndex\"\n                   [pageSizeOptions]=\"pageSizeOptions\"\n                   [showFirstLastButtons]=\"true\">\n    </mat-paginator>\n  </div>\n</div>\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Album } from \"./album.model\";\nimport { AlbumService } from \"./album.service\";\nimport { MediaMatcher } from \"@angular/cdk/layout\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { Paging } from \"../shared/paging.model\";\nimport { fromEvent } from \"rxjs\";\nimport { debounceTime, distinctUntilChanged, tap } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-album-list',\n  templateUrl: './album-list.component.html',\n  styleUrls: ['./album-list.component.scss']\n})\nexport class AlbumListComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild('input', { static: true }) input: ElementRef;\n\n  pageSize = 12;\n  pageSizeOptions = [6, 12, 24, 48];\n  total = 0;\n  pageIndex = 0;\n\n  mobileQuery: MediaQueryList;\n  private _mobileQueryListener: () => void;\n\n  albums: Album[];\n\n  constructor(private albumService: AlbumService, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnInit() {\n    this.fetchAlbums(\"\", new Paging(0, this.pageSize, \"title\", \"asc\"));\n  }\n\n  ngAfterViewInit(): void {\n    this.paginator.page.subscribe($event => {\n      this.fetchAlbums(\"\", new Paging($event.pageIndex, $event.pageSize, \"title\", \"asc\"));\n    });\n\n    // server-side search\n    fromEvent(this.input.nativeElement, 'keyup')\n      .pipe(\n        debounceTime(150),\n        distinctUntilChanged(),\n        tap(() => {\n          this.paginator.pageIndex = 0;\n          this.fetchAlbums(this.input.nativeElement.value, new Paging(0, this.pageSize, \"title\", \"asc\"));\n        })\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  cover(album: Album): string {\n    if (album === null || album === undefined) {\n      return \"../assets/img/defaultAlbum.png\";\n    }\n    return this.albumService.albumCoverUrl(album);\n  }\n\n  fetchAlbums(filter: string, paging: Paging) {\n    this.albumService.getAllAlbums(filter, paging).subscribe(albums => {\n      this.albums = albums.albums;\n      this.total = albums.total;\n    });\n  }\n}\n","<div class=\"artist\">\n  <mat-form-field>\n    <mat-placeholder>\n      <mat-icon>search</mat-icon>\n    </mat-placeholder>\n    <input matInput #input>\n  </mat-form-field>\n\n  <mat-grid-list [cols]=\"mobileQuery.matches ? 2 : 6\" rowHeight=\"1:1\">\n    <mat-grid-tile *ngFor=\"let album of albums\">\n      <!--<a routerLink=\"/song/album/{{album.albumId}}\"><img [src]=\"cover(album)\" class=\"cover\"></a>-->\n      <a routerLink=\"/album/{{album.albumId}}\"><img [src]=\"cover(album)\" class=\"cover\"></a>\n    </mat-grid-tile>\n  </mat-grid-list>\n  <mat-paginator #paginator\n                 [length]=\"total\"\n                 [pageSize]=\"pageSize\"\n                 [pageIndex]=\"pageIndex\"\n                 [pageSizeOptions]=\"pageSizeOptions\"\n                 [showFirstLastButtons]=\"true\">\n  </mat-paginator>\n</div>\n","import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {AlbumListComponent} from \"./album-list.component\";\nimport {AuthGuardService} from \"../security/auth-guard.service\";\nimport {AlbumListNewComponent} from \"./album-list-new.component\";\nimport {AlbumDetailComponent} from \"./album-detail.component\";\n\nconst albumRoutes: Routes = [\n  { path: 'album', component: AlbumListComponent, canActivate: [AuthGuardService] },\n  { path: 'album-new', component: AlbumListNewComponent, canActivate: [AuthGuardService] },\n  { path: 'album/:id', component: AlbumDetailComponent, canActivate: [AuthGuardService]}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(albumRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AlbumRoutingModule {}\n","import {Paging} from \"../shared/paging.model\";\nimport {Artist} from \"../artist/artist.model\";\n\nexport class Album {\n  constructor(public albumId: string, public title: string, public path: string, public artist?: Artist, public info?: any) {}\n}\n\nexport class AlbumCollection {\n  constructor(public albums: Album[], public paging: Paging, public total: number) {}\n}\n","import {NgModule} from \"@angular/core\";\nimport {AlbumCoverComponent} from \"./album-cover.component\";\nimport {AlbumCoverNewComponent} from \"./album-cover.new.component\";\nimport {AlbumListComponent} from \"./album-list.component\";\nimport {AlbumListNewComponent} from \"./album-list-new.component\";\nimport {AlbumService} from \"./album.service\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {RouterModule} from \"@angular/router\";\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatGridListModule} from \"@angular/material/grid-list\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nimport {AlbumDetailComponent} from \"./album-detail.component\";\nimport {MatChipsModule} from \"@angular/material/chips\";\nimport {MatButtonModule} from \"@angular/material/button\";\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    RouterModule,\n    MatButtonModule,\n    MatCardModule,\n    MatChipsModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatTooltipModule\n  ],\n  declarations: [\n    AlbumCoverComponent,\n    AlbumCoverNewComponent,\n    AlbumListComponent,\n    AlbumListNewComponent,\n    AlbumDetailComponent\n  ],\n  exports: [\n    AlbumListComponent,\n    AlbumListNewComponent,\n    AlbumDetailComponent\n  ],\n  providers: [\n    AlbumService\n  ]\n})\n\nexport class AlbumModule {}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs/index\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../environments/environment\";\nimport { Album, AlbumCollection } from \"./album.model\";\nimport { SongService } from \"../song/song.service\";\nimport { AuthService } from \"../security/auth.service\";\nimport { Paging } from \"../shared/paging.model\";\nimport { BaseService } from \"../shared/base.service\";\nimport { map } from \"rxjs/operators\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\n@Injectable()\nexport class AlbumService extends BaseService {\n  constructor(\n    private http: HttpClient,\n    private songService: SongService,\n    private authService: AuthService,\n    private sanitizer: DomSanitizer) {\n    super();\n  }\n\n  getAllAlbums(filter: string, paging?: Paging): Observable<AlbumCollection> {\n    let parameter = this.getPagingForUrl(paging);\n    if (filter !== null && filter !== undefined && filter !== \"\") {\n      if (parameter === \"\") {\n        parameter = \"?filter=\" + filter;\n      } else {\n        parameter += \"&filter=\" + filter;\n      }\n    }\n    if (parameter === \"\") {\n      parameter = \"?title=notempty\";\n    } else {\n      parameter += \"&title=notempty\";\n    }\n    return this.http.get<AlbumCollection>(environment.restserver + \"/api/album\" + parameter);\n  }\n\n  getAlbum(id: string): Observable<Album> {\n    return this.http.get<Album>(environment.restserver + \"/api/album/\" + id);\n  }\n\n  getAlbumInfo(id: string): Observable<Album> {\n    return this.http.get<any>(environment.restserver + \"/api/album/\" + id + \"/info\");\n  }\n\n  getCover(album: Album): any {\n    return this.http.get(environment.restserver + \"/api/album/\" + album.albumId + \"/cover\", {\n      responseType: 'blob'\n    })\n      .pipe(\n        map((res: any) => {\n          const urlCreator = window.URL;\n          return this.sanitizer.bypassSecurityTrustUrl(urlCreator.createObjectURL(res));\n        })\n      );\n  }\n\n  albumCoverUrl(album: Album): string {\n    return environment.restserver + \"/api/album/\" + album.albumId + \"/cover?bearer=\" + encodeURIComponent(this.authService.getToken());\n  }\n}\n","import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\n\nconst appRoutes: Routes = [\n  {path: '', redirectTo: 'overview', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes, { relativeLinkResolution: 'legacy' })\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AppRoutingModule {\n}\n","import {ChangeDetectorRef, Component, OnDestroy} from '@angular/core';\nimport {MediaMatcher} from '@angular/cdk/layout';\nimport {Router} from '@angular/router';\nimport {AuthService} from \"./security/auth.service\";\nimport {Observable} from \"rxjs/index\";\nimport {PlayerService} from \"./player/player.service\";\nimport {MatBottomSheet} from \"@angular/material/bottom-sheet\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnDestroy {\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  theme = 'indigo-pink-light';\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private playerService: PlayerService,\n    private bottomPlayerSheet: MatBottomSheet,\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n    if (localStorage.getItem(\"theme\") !== null) {\n      this.theme = localStorage.getItem(\"theme\");\n    }\n    this.authService.isLoggedIn.subscribe(b => {\n      if (b) {\n        this.playerService.loadPlayqueue();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  currentTheme() {\n    return {[this.theme]: true};\n  }\n\n  setCurrentTheme(theme: string) {\n    this.theme = theme;\n    localStorage.setItem(\"theme\", theme);\n  }\n\n  goHome() {\n    this.router.navigate([\"/\"])\n  }\n\n  gotoConfig() {\n    this.router.navigate([\"/config\"])\n  }\n\n  gotoUsermanagement() {\n    this.router.navigate([\"/user\"])\n  }\n\n  logout() {\n    this.authService.logout()\n  }\n\n  isLoggedIn(): Observable<boolean> {\n    return this.authService.isLoggedIn;\n  }\n\n  isAdmin(): boolean {\n    return this.authService.isAdmin()\n  }\n\n  username(): string {\n    return this.authService.getLoggedInUsername();\n  }\n}\n","<div [ngClass]=\"currentTheme()\">\n  <div class=\"main-container\" [class.is-mobile]=\"mobileQuery.matches\">\n    <mat-toolbar color=\"primary\" class=\"main-navbar\">\n      <button mat-icon-button (click)=\"lsnav.toggle()\"><mat-icon>menu</mat-icon></button>\n      <h1 class=\"app-name\" (click)=\"goHome()\">Go2Music</h1>\n      <span class=\"navbar-spacer\"></span>\n      <button mat-icon-button [matMenuTriggerFor]=\"themeMenu\">\n        <mat-icon class=\"navbar-icon\">format_color_fill</mat-icon>\n      </button>\n      <button mat-icon-button [matMenuTriggerFor]=\"userMenu\">\n        <mat-icon class=\"navbar-icon\">person</mat-icon>\n      </button>\n      <button mat-icon-button (click)=\"rsnav.toggle()\"><mat-icon>more_vert</mat-icon></button>\n    </mat-toolbar>\n\n    <mat-sidenav-container class=\"left-sidenav-container\"\n                           [style.marginTop.px]=\"mobileQuery.matches ? 56 : 0\">\n      <mat-sidenav [opened]=\"!mobileQuery.matches\" #lsnav [mode]=\"mobileQuery.matches ? 'over' : 'side'\"\n                   [fixedInViewport]=\"mobileQuery.matches\" fixedTopGap=\"56\">\n        <mat-nav-list>\n          <mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/overview']\" class=\"mat-primary\">\n            <mat-icon matListIcon color=\"accent\">dashboard</mat-icon>\n            <span i18n=\"@@navDashboard\">Overview</span>\n          </mat-list-item>\n\n          <mat-divider> </mat-divider>\n\n          <mat-list-item routerLinkActive=\"active\" routerLink=\"playlist\">\n            <mat-icon matListIcon color=\"accent\">featured_play_list</mat-icon>\n            <span i18n=\"@@navText\">Playlists</span>\n          </mat-list-item>\n          <mat-list-item routerLinkActive=\"active\" routerLink=\"artist\">\n            <mat-icon matListIcon color=\"accent\">people</mat-icon>\n            <span i18n=\"@@navData\">Artists</span>\n          </mat-list-item>\n          <mat-list-item routerLinkActive=\"active\" routerLink=\"artist-new\">\n            <mat-icon matListIcon color=\"accent\">people</mat-icon>\n            <span i18n=\"@@navData\">Artists (new)</span>\n          </mat-list-item>\n<!--\n          <mat-list-item routerLinkActive=\"active\" routerLink=\"album\">\n            <mat-icon matListIcon color=\"accent\">album</mat-icon>\n            <span i18n=\"@@navUsers\">Albums (old)</span>\n          </mat-list-item>\n-->\n          <mat-list-item routerLinkActive=\"active\" routerLink=\"album-new\">\n            <mat-icon matListIcon color=\"accent\">album</mat-icon>\n            <span i18n=\"@@navUsers\">Albums</span>\n          </mat-list-item>\n          <mat-list-item routerLinkActive=\"active\" routerLink=\"age\">\n            <mat-icon matListIcon color=\"accent\">date_range</mat-icon>\n            <span i18n=\"@@navUsers\">Age</span>\n          </mat-list-item>\n          <mat-list-item routerLinkActive=\"active\" routerLink=\"genre\">\n            <mat-icon matListIcon color=\"accent\">toys</mat-icon>\n            <span i18n=\"@@navUsers\">Genre</span>\n          </mat-list-item>\n          <mat-list-item routerLinkActive=\"active\" routerLink=\"song\">\n            <mat-icon matListIcon color=\"accent\">library_music</mat-icon>\n            <span i18n=\"@@navUsers\">Songs</span>\n          </mat-list-item>\n          <mat-list-item routerLinkActive=\"active\" routerLink=\"management\" *ngIf=\"isAdmin()\">\n            <mat-icon matListIcon color=\"accent\">bug_report</mat-icon>\n            <span i18n=\"@@navUsers\">Management</span>\n          </mat-list-item>\n        </mat-nav-list>\n        <div id=\"version\">0.4.3</div>\n      </mat-sidenav>\n\n      <mat-sidenav #rsnav position=\"end\" [mode]=\"mobileQuery.matches ? 'over' : 'side'\"\n                   [fixedInViewport]=\"mobileQuery.matches\" fixedTopGap=\"56\">\n        <app-player></app-player>\n      </mat-sidenav>\n\n      <mat-sidenav-content class=\"main\">\n        <router-outlet></router-outlet>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  </div>\n\n  <mat-menu #userMenu=\"matMenu\">\n    <button mat-menu-item routerLink=\"/login\" *ngIf=\"!(isLoggedIn() | async)\">\n      <mat-icon>account_circle</mat-icon>\n      <span i18n=\"@@menuLogin\">Login</span>\n    </button>\n    <button mat-menu-item *ngIf=\"isLoggedIn() | async\">\n      <mat-icon>settings</mat-icon>\n      <span i18n=\"@@menuProfile\">Settings</span>\n    </button>\n    <button mat-menu-item *ngIf=\"isAdmin()\" (click)=\"gotoConfig()\">\n      <mat-icon>build</mat-icon>\n      <span i18n=\"@@menuConfig\">Administration</span>\n    </button>\n    <button mat-menu-item *ngIf=\"isAdmin()\" (click)=\"gotoUsermanagement()\">\n      <mat-icon>people</mat-icon>\n      <span i18n=\"@@menuUsers\">Usermanagement</span>\n    </button>\n    <button mat-menu-item *ngIf=\"isLoggedIn() | async\" (click)=\"logout()\">\n      <mat-icon>power_settings_new</mat-icon>\n      <span i18n=\"@@menuLogout\">Logout {{username()}}</span>\n    </button>\n    <button mat-menu-item>\n      <mat-icon>help</mat-icon>\n      <span i18n=\"@@menuHelp\">Help</span>\n    </button>\n  </mat-menu>\n  <mat-menu #themeMenu=\"matMenu\">\n    <h4 mat-subheader>Light Themes</h4>\n    <button mat-menu-item (click)=\"setCurrentTheme('indigo-pink-light')\">\n      <mat-icon>fiber_manual_record</mat-icon>\n      <span>Indigo Pink</span>\n    </button>\n    <button mat-menu-item (click)=\"setCurrentTheme('deeppurple-amber-light')\">\n      <mat-icon>fiber_manual_record</mat-icon>\n      <span>Deeppurple Amber</span>\n    </button>\n    <button mat-menu-item (click)=\"setCurrentTheme('pink-bluegray-light')\">\n      <mat-icon>fiber_manual_record</mat-icon>\n      <span>Pink Bluegray</span>\n    </button>\n    <button mat-menu-item (click)=\"setCurrentTheme('purple-green-light')\">\n      <mat-icon>fiber_manual_record</mat-icon>\n      <span>Purple Green</span>\n    </button>\n    <button mat-menu-item (click)=\"setCurrentTheme('brown-lime-light')\">\n      <mat-icon>fiber_manual_record</mat-icon>\n      <span>Brown Lime</span>\n    </button>\n    <mat-divider> </mat-divider>\n    <h4 mat-subheader>Dark Themes</h4>\n    <button mat-menu-item (click)=\"setCurrentTheme('indigo-pink-dark')\">\n      <mat-icon>fiber_manual_record</mat-icon>\n      <span>Indigo Pink</span>\n    </button>\n    <button mat-menu-item (click)=\"setCurrentTheme('deeppurple-amber-dark')\">\n      <mat-icon>fiber_manual_record</mat-icon>\n      <span>Deeppurple Amber</span>\n    </button>\n    <button mat-menu-item (click)=\"setCurrentTheme('pink-bluegray-dark')\">\n      <mat-icon>fiber_manual_record</mat-icon>\n      <span>Pink Bluegray</span>\n    </button>\n    <button mat-menu-item (click)=\"setCurrentTheme('purple-green-dark')\">\n      <mat-icon>fiber_manual_record</mat-icon>\n      <span>Purple Green</span>\n    </button>\n    <button mat-menu-item (click)=\"setCurrentTheme('brown-lime-dark')\">\n      <mat-icon>fiber_manual_record</mat-icon>\n      <span>Brown Lime</span>\n    </button>\n  </mat-menu>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\nimport {AlbumModule} from \"./album/album.module\";\nimport {ArtistModule} from \"./artist/artist.module\";\nimport {SongModule} from \"./song/song.module\";\nimport {SharedModule} from \"./shared/shared.module\";\nimport {OverviewModule} from \"./overview/overview.module\";\nimport {PlaylistModule} from \"./playlist/playlist.module\";\nimport {ConfigModule} from \"./config/config.module\";\nimport {UserModule} from \"./user/user.module\";\nimport {PlayerModule} from \"./player/player.module\";\nimport {SecurityModule} from \"./security/security.module\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {AlbumRoutingModule} from \"./album/album-routing.module\";\nimport {ArtistRoutingModule} from \"./artist/artist-routing.module\";\nimport {UserRoutingModule} from \"./user/user-routing.module\";\nimport {ConfigRoutingModule} from \"./config/config-routing.module\";\nimport {SongRoutingModule} from \"./song/song-routing.module\";\nimport {OverviewRoutingModule} from \"./overview/overview-routing.module\";\nimport {SecurityRoutingModule} from \"./security/security-routing.module\";\nimport {PlaylistRoutingModule} from \"./playlist/playlist-routing.module\";\nimport {ManagementModule} from \"./management/management.module\";\nimport {ManagementRoutingModule} from \"./management/management-routing.module\";\nimport {MatBottomSheetModule} from \"@angular/material/bottom-sheet\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {AgeModule} from \"./age/age.module\";\nimport {AgeRoutingModule} from \"./age/age-routing.module\";\nimport {GenreRoutingModule} from \"./genre/genre-routing.module\";\nimport {GenreModule} from \"./genre/genre.module\";\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FlexLayoutModule,\n        AgeRoutingModule,\n        AlbumRoutingModule,\n        ArtistRoutingModule,\n        ConfigRoutingModule,\n        GenreRoutingModule,\n        ManagementRoutingModule,\n        OverviewRoutingModule,\n        PlaylistRoutingModule,\n        SecurityRoutingModule,\n        SongRoutingModule,\n        UserRoutingModule,\n        AppRoutingModule,\n        AgeModule,\n        AlbumModule,\n        ArtistModule,\n        ConfigModule,\n        GenreModule,\n        ManagementModule,\n        OverviewModule,\n        PlayerModule,\n        PlaylistModule,\n        SecurityModule,\n        SharedModule,\n        SongModule,\n        UserModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatIconModule,\n        MatListModule,\n        MatMenuModule,\n        MatSidenavModule,\n        MatToolbarModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {ArtistService} from \"./artist.service\";\nimport {Artist} from \"./artist.model\";\n\n@Component({\n  selector: 'app-artist-detail',\n  templateUrl: './artist-detail.component.html',\n  styleUrls: ['./artist-detail.component.scss']\n})\nexport class ArtistDetailComponent implements OnInit {\n\n  artistInfo: any;\n  artistId: string;\n  artist: Artist;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private artistService: ArtistService) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params) => {\n      if (params.get('id') === null) {\n        return;\n      }\n      this.artistId = params.get(\"id\");\n      this.artistService.getArtistInfo(params.get('id')).subscribe(a => {\n        this.artistInfo = a.info;\n        this.artist = a;\n        this.artistId = a.artistId;\n      });\n    });\n  }\n\n  cover(size: string): string {\n    if (this.artistInfo !== null && this.artistInfo !== undefined && this.artistInfo.image != null && this.artistInfo.image !== undefined) {\n      for (let image of this.artistInfo.image) {\n        if (image[\"size\"] === size) {\n          return image[\"#text\"];\n        }\n      }\n    }\n    return \"\";\n  }\n}\n","<mat-card class=\"artist-card\">\n  <mat-card-header>\n    <mat-card-title>{{artistInfo?.name}}</mat-card-title>\n  </mat-card-header>\n  <img mat-card-image src=\"{{cover('small')}}\">\n  <mat-card-content>\n    <p>\n      {{artistInfo?.bio?.summary}} <a mat-button href=\"{{artistInfo?.url}}\" target=\"_blank\">Read more</a>\n    </p>\n    <hr/>\n    <p>Similar</p>\n    <mat-chip-list *ngIf=\"artistInfo?.similar\" aria-label=\"Tags\">\n      <mat-chip *ngFor=\"let artist of artistInfo.similar.artist\" routerLink=\"/artist\" [queryParams]=\"{filter: artist.name}\">{{artist.name}}</mat-chip>\n    </mat-chip-list>\n    <hr/>\n    <p>Tags</p>\n    <mat-chip-list *ngIf=\"artistInfo?.tags\" aria-label=\"Tags\">\n      <mat-chip *ngFor=\"let tag of artistInfo.tags.tag\">{{tag.name}}</mat-chip>\n    </mat-chip-list>\n  </mat-card-content>\n  <mat-card-actions>\n    <a mat-button routerLink=\"/song/artist/{{artistId}}\">Songs</a>\n    <a mat-button *ngIf=\"artistInfo?.url\" href=\"{{artistInfo.url}}\" target=\"_blank\">last.fm</a>\n  </mat-card-actions>\n</mat-card>\n","import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MatSort} from \"@angular/material/sort\";\nimport {fromEvent, merge} from \"rxjs\";\nimport {debounceTime, distinctUntilChanged, tap} from \"rxjs/operators\";\n\nimport {ArtistService} from \"./artist.service\";\nimport {ArtistDataSource} from \"./artist.datasource\";\nimport {Paging} from \"../shared/paging.model\";\nimport {Artist} from \"./artist.model\";\n\n@Component({\n  selector: 'app-artist-list',\n  templateUrl: './artist-list.component.html',\n  styleUrls: ['./artist-list.component.scss']\n})\nexport class ArtistListComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild('input', { static: true }) input: ElementRef;\n\n  pageSize = 10;\n  pageSizeOptions = [5, 10, 20, 50];\n  total = 0;\n\n  columnDefs = [\n    {name: 'id', title: 'ID'},\n    {name: 'name', title: 'Name'}\n  ];\n\n  dataSource: ArtistDataSource;\n\n  displayedColumns = ['name'];\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private artistService: ArtistService\n  ) {\n  }\n\n  ngAfterViewInit(): void {\n    // server-side search\n    fromEvent(this.input.nativeElement, 'keyup')\n      .pipe(\n        debounceTime(150),\n        distinctUntilChanged(),\n        tap(() => {\n          this.paginator.pageIndex = 0;\n          this.loadArtistsPage();\n        })\n      )\n      .subscribe();\n\n    // reset the paginator after sorting\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        tap(() => this.loadArtistsPage())\n      )\n      .subscribe();\n  }\n\n  ngOnInit(): void {\n    if (localStorage.getItem(\"pageSize\")) {\n      this.pageSize = +localStorage.getItem(\"pageSize\");\n    }\n    this.dataSource = new ArtistDataSource(this.artistService);\n    this.route.queryParams.subscribe((params) => {\n      let filter = \"\";\n      if (params[\"filter\"] !== null && params[\"filter\"] !== undefined) {\n        filter = params[\"filter\"];\n      }\n      this.dataSource.loadArtists(filter, new Paging(0, this.pageSize, \"\", \"asc\"));\n      this.dataSource.artistTotalSubject.subscribe(total => {\n        this.total = total;\n        if (total == 1) {\n          this.dataSource.artistsSubject.subscribe(artists => {\n            if (artists !== null && artists !== undefined && artists.length === 1) {\n              this.router.navigate([\"/artist\", artists[0].artistId])\n            }\n          });\n        }\n      });\n    });\n  }\n\n  loadArtistsPage() {\n    localStorage.setItem(\"pageSize\", \"\" + this.paginator.pageSize);\n    this.dataSource.loadArtists(this.input.nativeElement.value, new Paging(\n      this.paginator.pageIndex,\n      this.paginator.pageSize,\n      this.sort.active,\n      this.sort.direction));\n  }\n\n  getProperty = (obj, path) => (\n    path.split('.').reduce((o, p) => o && o[p], obj)\n  );\n\n  gotoSongs(artist: Artist) {\n    //this.router.navigate([\"/song/artist/\" + artist.artistId]);\n    this.router.navigate([\"/artist/\" + artist.artistId]);\n  }\n}\n","<div class=\"artist\">\n  <mat-form-field>\n    <mat-placeholder><mat-icon>search</mat-icon></mat-placeholder>\n    <input matInput #input>\n  </mat-form-field>\n\n  <div class=\"spinner-container\" *ngIf=\"dataSource.loading$ | async\">\n    <mat-spinner></mat-spinner>\n  </div>\n\n  <mat-table matSort #artisttable [dataSource]=\"dataSource\" class=\"artists-table\">\n    <ng-container *ngFor=\"let column of columnDefs\" [matColumnDef]=\"column.name\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>{{column.title}}</mat-header-cell>\n      <mat-cell *matCellDef=\"let artist\" (click)=\"gotoSongs(artist)\">{{ getProperty(artist, column.name) }}</mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n    <mat-paginator #paginator\n                   [length]=\"total\"\n                   [pageSize]=\"pageSize\"\n                   [pageSizeOptions]=\"pageSizeOptions\"\n                   [showFirstLastButtons]=\"true\">\n    </mat-paginator>\n</div>\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {CdkVirtualScrollViewport} from \"@angular/cdk/scrolling\";\n\nimport {ArtistService} from \"./artist.service\";\nimport {Artist} from \"./artist.model\";\nimport {ArtistNewDataSource} from \"./artist-new.datasource\";\n\n@Component({\n  selector: 'app-artist-list',\n  templateUrl: './artist-new-list.component.html',\n  styleUrls: ['./artist-new-list.component.scss']\n})\nexport class ArtistNewListComponent implements OnInit, AfterViewInit {\n  dataSource: ArtistNewDataSource;\n\n  @ViewChild(CdkVirtualScrollViewport, { static: true })\n  viewport: CdkVirtualScrollViewport;\n\n  constructor(\n    private router: Router,\n    private artistService: ArtistService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.dataSource = new ArtistNewDataSource(this.artistService);\n  }\n\n  gotoSongs(artist: Artist) {\n    this.router.navigate([\"/song/artist/\" + artist.artistId]);\n  }\n\n  ngAfterViewInit(): void {\n    this.viewport.setTotalContentSize(20000);\n  }\n}\n","<cdk-virtual-scroll-viewport [itemSize]=\"20\">\n  <ul>\n    <li *cdkVirtualFor=\"let artist of dataSource\" (click)=\"gotoSongs(artist)\">\n      {{artist?.name || 'Unknown'}}\n    </li>\n  </ul>\n</cdk-virtual-scroll-viewport>\n","import {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {ArtistService} from \"./artist.service\";\nimport {Artist} from \"./artist.model\";\nimport {Paging} from \"../shared/paging.model\";\n\nexport class ArtistNewDataSource extends DataSource<Artist> {\n  private artists: Artist[];\n  private dataStream = new BehaviorSubject<(Artist)[]>([]);\n\n  constructor(private artistService: ArtistService) {\n    super();\n  }\n\n  connect(): Observable<Artist[]> {\n    this.artistService.getAllArtists(\"\", new Paging(0, 0, \"\", \"asc\"))\n      .subscribe((artistCollection) => {\n        this.artists = artistCollection.artists;\n        this.dataStream.next(this.artists);\n      })\n\n    return this.dataStream;\n  }\n\n  disconnect(): void {\n  }\n}\n","import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {AuthGuardService} from \"../security/auth-guard.service\";\nimport {ArtistListComponent} from \"./artist-list.component\";\nimport {ArtistNewListComponent} from \"./artist-new-list.component\";\nimport {ArtistDetailComponent} from \"./artist-detail.component\";\n\nconst artistRoutes: Routes = [\n  { path: 'artist', component: ArtistListComponent, canActivate: [AuthGuardService] },\n  { path: 'artist/:id', component: ArtistDetailComponent, canActivate: [AuthGuardService] },\n  { path: 'artist-new', component: ArtistNewListComponent, canActivate: [AuthGuardService] }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(artistRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class ArtistRoutingModule {}\n","import {DataSource} from \"@angular/cdk/table\";\nimport {CollectionViewer} from \"@angular/cdk/collections\";\nimport {BehaviorSubject, Observable, of} from \"rxjs\";\nimport {catchError, finalize} from \"rxjs/operators\";\nimport {Paging} from \"../shared/paging.model\";\nimport {Artist, ArtistCollection} from \"./artist.model\";\nimport {ArtistService} from \"./artist.service\";\n\nexport class ArtistDataSource implements DataSource<Artist> {\n  public artistsSubject = new BehaviorSubject<Artist[]>([]);\n  public artistTotalSubject = new BehaviorSubject<number>(0);\n  private loadingSubject = new BehaviorSubject<boolean>(false);\n  public artists: Artist[] = [];\n\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private artistService: ArtistService) {\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<Artist[]> {\n    return this.artistsSubject.asObservable();\n  }\n\n  disconnect(collectionViewer: CollectionViewer): void {\n    this.artistsSubject.complete();\n    this.artistTotalSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n  loadArtists(filter: string, paging: Paging) {\n    this.loadingSubject.next(true);\n\n    let artistsObservable: Observable<ArtistCollection>;\n\n    artistsObservable = this.artistService.getAllArtists(filter, paging);\n    artistsObservable\n      .pipe(\n        catchError(() => of(new ArtistCollection([], null, 0))),\n        finalize(() => this.loadingSubject.next(false))\n      )\n      .subscribe(artistCollection => {\n        this.artistTotalSubject.next(artistCollection.total);\n        this.artistsSubject.next(artistCollection.artists);\n        this.artists = artistCollection.artists;\n      });\n  }\n}\n","import {Album} from \"../album/album.model\";\nimport {Paging} from \"../shared/paging.model\";\n\nexport class Artist {\n  constructor(public artistId: string, public name: string, public info: any) {}\n}\n\nexport class ArtistCollection {\n  constructor(public artists: Artist[], public paging: Paging, public total: number) {}\n}\n","import {NgModule} from \"@angular/core\";\nimport {ArtistListComponent} from \"./artist-list.component\";\nimport {ArtistNewListComponent} from \"./artist-new-list.component\";\nimport {ArtistService} from \"./artist.service\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {RouterModule} from \"@angular/router\";\nimport {ScrollingModule} from \"@angular/cdk/scrolling\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {ArtistDetailComponent} from \"./artist-detail.component\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatChipsModule} from \"@angular/material/chips\";\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule,\n    MatButtonModule,\n    MatCardModule,\n    MatChipsModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    ScrollingModule\n  ],\n  declarations: [\n    ArtistListComponent,\n    ArtistNewListComponent,\n    ArtistDetailComponent\n  ],\n  exports: [\n    ArtistListComponent,\n    ArtistNewListComponent,\n    ArtistDetailComponent\n  ],\n  providers: [\n    ArtistService\n  ]\n})\n\nexport class ArtistModule {\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs/index\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../environments/environment\";\nimport { SongService } from \"../song/song.service\";\nimport { Artist, ArtistCollection } from \"./artist.model\";\nimport { Album } from \"../album/album.model\";\nimport { Paging } from \"../shared/paging.model\";\nimport { BaseService } from \"../shared/base.service\";\n\n@Injectable()\nexport class ArtistService extends BaseService {\n  constructor(private http: HttpClient, private songService: SongService) {\n    super();\n  }\n\n  getAllArtists(filter: string, paging?: Paging): Observable<ArtistCollection> {\n    let parameter = this.getPagingForUrl(paging);\n    if (filter !== null && filter !== undefined && filter !== \"\") {\n      if (parameter === \"\") {\n        parameter = \"?filter=\" + filter;\n      } else {\n        parameter += \"&filter=\" + filter;\n      }\n    }\n    return this.http.get<ArtistCollection>(environment.restserver + \"/api/artist\" + parameter);\n  }\n\n  getArtist(id: string): Observable<Artist> {\n    return this.http.get<Artist>(environment.restserver + \"/api/artist/\" + id);\n  }\n\n  getArtistInfo(id: string): Observable<Artist> {\n    return this.http.get<any>(environment.restserver + \"/api/artist/\" + id + \"/info\");\n  }\n\n\n  getAlbumsForArtist(id: string): Observable<Album[]> {\n    return this.http.get<Album[]>(environment.restserver + \"/api/artist/\" + id + \"/albums\");\n  }\n\n  artistCoverUrl(artist: Artist): string {\n    return environment.restserver + \"/api/artist/\" + artist.artistId + \"/cover\";\n  }\n}\n","import {RouterModule, Routes} from \"@angular/router\";\nimport {AuthGuardService} from \"../security/auth-guard.service\";\nimport {NgModule} from \"@angular/core\";\nimport {ConfigComponent} from \"./config.component\";\n\nconst configRoutes: Routes = [\n  { path: 'config', component: ConfigComponent, canActivate: [AuthGuardService] }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(configRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class ConfigRoutingModule {}\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport {Application, Config, Database, Media, Server} from \"./config.model\";\nimport {ConfigService} from \"./config.service\";\n\n@Component({\n  selector: 'app-config',\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.scss']\n})\nexport class ConfigComponent implements OnInit {\n  config: Config;\n  databaseType: string;\n  databaseSchema: string;\n  databaseUsername: string;\n  databasePassword: string;\n  databaseUrl: string;\n  mediaPath: string;\n  mediaSyncFrequency: string;\n  mediaSyncAtStart = false;\n  serverPort: number;\n  applicationMode: string;\n  applicationLoglevel: string;\n  applicationCors: string;\n  message: string;\n\n  constructor(private configService: ConfigService, private _location: Location) { }\n\n  ngOnInit() {\n    this.configService.getConfig().subscribe(c => {\n      console.log(c);\n      this.config = c;\n      this.resetFields();\n    });\n  }\n\n  resetFields() {\n    this.databaseType = this.config.database.type;\n    this.databaseSchema = this.config.database.schema;\n    this.databaseUsername = this.config.database.username;\n    this.databasePassword = this.config.database.password;\n    this.databaseUrl = this.config.database.url;\n    this.mediaPath = this.config.media.path;\n    this.mediaSyncFrequency = this.config.media.syncfrequency;\n    this.mediaSyncAtStart = this.config.media.syncatstart;\n    this.serverPort = this.config.server.port;\n    this.applicationMode = this.config.application.mode;\n    this.applicationLoglevel = this.config.application.loglevel;\n    this.applicationCors = this.config.application.cors;\n  }\n\n  cancelClicked() {\n    this._location.back();\n  }\n\n  saveConfig() {\n    let db = new Database(this.databaseUsername, this.databasePassword, this.databaseSchema, this.databaseType, this.databaseUrl);\n    let media = new Media(this.mediaPath, this.mediaSyncFrequency, this.mediaSyncAtStart);\n    let server = new Server(this.serverPort);\n    let application = new Application(this.applicationMode, this.applicationLoglevel, this.applicationCors);\n    this.configService.saveConfig(new Config(application, server, db, media)).subscribe(c => {\n      this.config = c;\n      this.resetFields();\n      this.message = \"Configuration saved. Restart service to activate.\";\n    });\n  }\n}\n","<mat-card>\n  <mat-card-title>go2music Configuration</mat-card-title>\n  <mat-card-content>\n    <form>\n      <div class=\"config-form\">\n        <h2>Database</h2>\n        <mat-divider></mat-divider>\n        <mat-form-field>\n          <mat-select placeholder=\"Type\" name=\"databasetype\" [(ngModel)]=\"databaseType\">\n            <mat-option value=\"mysql\">MySQL</mat-option>\n            <mat-option value=\"postgres\">PostgreSQL</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <input matInput placeholder=\"Username\" name=\"databaseusername\" [(ngModel)]=\"databaseUsername\">\n        </mat-form-field>\n        <mat-form-field>\n          <input type=\"password\" matInput placeholder=\"Password\" name=\"databasepassword\" [(ngModel)]=\"databasePassword\">\n        </mat-form-field>\n        <mat-form-field>\n          <input matInput placeholder=\"Schema\" name=\"databaseschema\" [(ngModel)]=\"databaseSchema\">\n        </mat-form-field>\n        <mat-form-field>\n          <input matInput placeholder=\"Url\" name=\"databaseurl\" [(ngModel)]=\"databaseUrl\">\n        </mat-form-field>\n        <h2>Media</h2>\n        <mat-divider></mat-divider>\n        <mat-form-field>\n          <input matInput placeholder=\"Path\" name=\"mediapath\" [(ngModel)]=\"mediaPath\">\n        </mat-form-field>\n        <mat-form-field>\n          <input matInput placeholder=\"Sync frequency\" name=\"mediasyncfrequency\" [(ngModel)]=\"mediaSyncFrequency\">\n        </mat-form-field>\n        <mat-checkbox name=\"syncatstart\" [(ngModel)]=\"mediaSyncAtStart\">Sync at start</mat-checkbox>\n        <h2>Server</h2>\n        <mat-divider></mat-divider>\n        <mat-form-field>\n          <input type=\"number\" matInput placeholder=\"Port\" name=\"serverport\" [(ngModel)]=\"serverPort\">\n        </mat-form-field>\n        <h2>Application</h2>\n        <mat-divider></mat-divider>\n        <mat-form-field>\n          <mat-select placeholder=\"Run mode\" name=\"applicationmode\" [(ngModel)]=\"applicationMode\">\n            <mat-option value=\"release\">Production</mat-option>\n            <mat-option value=\"test\">Test</mat-option>\n            <mat-option value=\"debug\">Development</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-select placeholder=\"Loglevel\" name=\"applicationloglevel\" [(ngModel)]=\"applicationLoglevel\">\n            <mat-option value=\"trace\">Trace</mat-option>\n            <mat-option value=\"debug\">Debug</mat-option>\n            <mat-option value=\"info\">Info</mat-option>\n            <mat-option value=\"warning\">Warning</mat-option>\n            <mat-option value=\"error\">Error</mat-option>\n            <mat-option value=\"fatal\">Fatal</mat-option>\n            <mat-option value=\"panic\">Panic</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-select placeholder=\"Cors\" name=\"applicationcors\" [(ngModel)]=\"applicationCors\">\n            <mat-option value=\"all\">All</mat-option>\n            <mat-option value=\"direct\">Direct</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </form>\n    <span class=\"message\">{{message}}</span>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button (click)=\"saveConfig()\"><mat-icon>done</mat-icon>Save</button>\n    <button mat-button (click)=\"resetFields()\"><mat-icon>undo</mat-icon>Reset</button>\n    <button mat-button (click)=\"cancelClicked()\"><mat-icon>cancel</mat-icon>Cancel</button>\n  </mat-card-actions>\n</mat-card>\n","\nexport class Server {\n  constructor(\n    public port: number\n  ) {}\n}\n\nexport class Database {\n  constructor(\n    public username: string,\n    public password: string,\n    public schema: string,\n    public type: string,\n    public url: string\n  ) {}\n}\n\nexport class Media {\n  constructor(\n    public path: string,\n    public syncfrequency: string,\n    public syncatstart: boolean\n  ) {}\n}\n\nexport class Application {\n  constructor(\n    public mode: string,\n    public loglevel: string,\n    public cors: string\n  ) {}\n}\n\nexport class Config {\n  constructor(\n    public application: Application,\n    public server: Server,\n    public database: Database,\n    public media: Media\n  ) {}\n}\n","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {ConfigComponent} from \"./config.component\";\nimport {ConfigService} from \"./config.service\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatDividerModule} from \"@angular/material/divider\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatSelectModule} from \"@angular/material/select\";\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatSelectModule\n  ],\n  declarations: [\n    ConfigComponent\n  ],\n  exports: [\n    ConfigComponent\n  ],\n  providers: [ConfigService]\n})\n\nexport class ConfigModule {\n}\n","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Config} from \"./config.model\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable()\nexport class ConfigService {\n  constructor(private http: HttpClient) {}\n\n  getConfig(): Observable<Config> {\n    return this.http.get<Config>(environment.restserver + \"/api/admin/config\");\n  }\n\n  saveConfig(config: Config): Observable<Config> {\n    return this.http.put<Config>(environment.restserver + \"/api/admin/config\", config);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {GenreService} from \"./genre.service\";\nimport {NameCount} from \"../shared/namecount.model\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-genre-list',\n  templateUrl: './genre-list.component.html',\n  styleUrls: ['./genre-list.component.scss']\n})\nexport class GenreListComponent implements OnInit {\n\n  genres: NameCount[];\n\n  constructor(\n    private router: Router,\n    private genreService: GenreService\n  ) { }\n\n  ngOnInit() {\n    this.genreService.getGenres().subscribe(genres => this.genres = genres);\n  }\n\n  gotoSongs(genre: string) {\n    this.router.navigate([\"/song/genre/\" + genre]);\n  }\n}\n","<div class=\"decades\">\n  <mat-list>\n    <a mat-list-item *ngFor=\"let genre of genres\" (click)=\"gotoSongs(genre.name)\">{{genre.name}} ({{genre.count}} songs)</a>\n  </mat-list>\n</div>\n","import {RouterModule, Routes} from \"@angular/router\";\nimport {AuthGuardService} from \"../security/auth-guard.service\";\nimport {NgModule} from \"@angular/core\";\nimport {GenreListComponent} from \"./genre-list.component\";\n\nconst genreRoutes: Routes = [\n  {path: 'genre', component: GenreListComponent, canActivate: [AuthGuardService]}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(genreRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class GenreRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GenreListComponent } from './genre-list.component';\nimport {GenreService} from \"./genre.service\";\nimport {SharedModule} from \"../shared/shared.module\";\nimport {MatListModule} from \"@angular/material/list\";\n\n\n\n@NgModule({\n  declarations: [GenreListComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MatListModule\n  ],\n  exports: [\n    GenreListComponent\n  ],\n  providers: [\n    GenreService\n  ]\n})\nexport class GenreModule { }\n","import { Injectable } from '@angular/core';\nimport {BaseService} from \"../shared/base.service\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {NameCount} from \"../shared/namecount.model\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable()\nexport class GenreService extends BaseService {\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  getGenres(): Observable<NameCount[]> {\n    return this.http.get<NameCount[]>(environment.restserver + \"/api/info/genres\");\n  }\n}\n","import {RouterModule, Routes} from \"@angular/router\";\nimport {OverviewComponent} from \"../overview/overview.component\";\nimport {AuthGuardService} from \"../security/auth-guard.service\";\nimport {NgModule} from \"@angular/core\";\nimport {ManagementComponent} from \"./management.component\";\n\nconst managementRoutes: Routes = [\n  { path: 'management', component: ManagementComponent, canActivate: [AuthGuardService] },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(managementRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class ManagementRoutingModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ManagementService } from \"./management.service\";\nimport { Sync } from \"./management.model\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-management',\n  templateUrl: './management.component.html',\n  styleUrls: ['./management.component.scss']\n})\nexport class ManagementComponent implements OnInit {\n  sync: Sync;\n\n  constructor(\n    private managementService: ManagementService,\n    public snackBar: MatSnackBar\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.managementService.getSync().subscribe(s => this.sync = s)\n  }\n\n  removeDanglingSong(id: string) {\n    console.log(\"Remove song \" + id);\n    this.managementService.removeDanglingSong(id).subscribe(s => {\n      this.sync = s;\n      this.openSnackBar(`Removed dangling song`, \"Show\");\n    });\n  }\n\n  removeAllDanglingSongs() {\n    console.log(\"Remove all dangling songs\");\n    this.managementService.deleteSync().subscribe(s => {\n      this.sync = s;\n      this.openSnackBar(`Removed all dangling songs`, \"Show\");\n    });\n  }\n\n  removeAllEmptyAlbums() {\n    console.log(\"Remove all empty albums\");\n    this.managementService.removeEmptyAlbums().subscribe(s => {\n      this.sync = s;\n      this.openSnackBar(`Removed all empty albums`, \"Show\");\n    });\n  }\n\n  startSync() {\n    this.managementService.startSync().subscribe(s => {\n      this.sync = s;\n      this.openSnackBar(`Syncronize started`, \"Show\");\n    });\n  }\n\n  private openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n  emptyAlbumsCount(): number {\n    if (this.isNullOrUndefined(this.sync) || this.isNullOrUndefined(this.sync.empty_albums)) {\n      return 0;\n    }\n    return Object.keys(this.sync.empty_albums).length;\n  }\n\n  albumsWithoutTitleCount(): number {\n    if (this.isNullOrUndefined(this.sync) || this.isNullOrUndefined(this.sync.albums_without_title)) {\n      return 0;\n    }\n    return Object.keys(this.sync.albums_without_title).length;\n  }\n\n  artistsWithoutNameCount(): number {\n    if (this.isNullOrUndefined(this.sync) || this.isNullOrUndefined(this.sync.artists_without_name)) {\n      return 0;\n    }\n    return Object.keys(this.sync.artists_without_name).length;\n  }\n\n  renameAlbum(id: string) {\n    console.log(\"Rename album \" + id);\n    this.managementService.renameAlbum(id).subscribe(s => {\n      this.sync = s;\n      this.openSnackBar(`Album renamed`, \"Show\");\n    });\n  }\n\n  private isNullOrUndefined(o: any): boolean {\n    return o === null || o === undefined;\n  }\n}\n","<mat-accordion [multi]=\"true\">\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Songfiles with problems while importing ({{sync?.new_songs_problems}})\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <mat-list>\n      <mat-list-item *ngFor=\"let entry of sync?.problem_songs | keyvalue\">\n        <p><small>{{entry.key}} - {{entry.value}}</small></p>\n      </mat-list-item>\n    </mat-list>\n  </mat-expansion-panel>\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Songs not found in filesystem ({{sync?.dangling_songs_found}})\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <mat-list>\n      <mat-list-item *ngFor=\"let entry of sync?.dangling_songs | keyvalue\">\n        <mat-icon mat-list-icon (click)=\"removeDanglingSong(entry.key)\">delete</mat-icon>\n        <p mat-line><small>{{entry.value}}</small></p>\n      </mat-list-item>\n    </mat-list>\n    <mat-action-row>\n      <button mat-button (click)=\"removeAllDanglingSongs()\">\n        <mat-icon>delete</mat-icon>\n        Remove all\n      </button>\n      <button mat-button (click)=\"startSync()\">\n        <mat-icon>sync</mat-icon>\n        Syncronize now\n      </button>\n    </mat-action-row>\n  </mat-expansion-panel>\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Albums without any song ({{emptyAlbumsCount()}})\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <mat-list>\n      <mat-list-item *ngFor=\"let entry of sync?.empty_albums | keyvalue\">\n        <p mat-line><small>{{entry.value}}</small></p>\n      </mat-list-item>\n    </mat-list>\n    <mat-action-row>\n      <button mat-button (click)=\"removeAllEmptyAlbums()\">\n        <mat-icon>delete</mat-icon>\n        Remove all\n      </button>\n    </mat-action-row>\n  </mat-expansion-panel>\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Albums without title ({{albumsWithoutTitleCount()}})\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <mat-list>\n      <mat-list-item *ngFor=\"let entry of sync?.albums_without_title | keyvalue\">\n        <mat-icon mat-list-icon (click)=\"renameAlbum(entry.key)\">build</mat-icon>\n        <p mat-line><small>{{entry.value}}</small></p>\n      </mat-list-item>\n    </mat-list>\n  </mat-expansion-panel>\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Artists without name ({{artistsWithoutNameCount()}})\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <mat-list>\n      <mat-list-item *ngFor=\"let entry of sync?.artists_without_name | keyvalue\">\n        <p><small>{{entry.key}}</small></p>\n      </mat-list-item>\n    </mat-list>\n  </mat-expansion-panel>\n</mat-accordion>\n","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {ManagementComponent} from \"./management.component\";\nimport {ManagementService} from \"./management.service\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatListModule,\n    MatSnackBarModule\n  ],\n  declarations: [\n    ManagementComponent\n  ],\n  exports: [\n    ManagementComponent\n  ],\n  providers: [\n    ManagementService\n  ]\n})\n\nexport class ManagementModule {\n}\n","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {Sync} from \"./management.model\";\n\n@Injectable()\nexport class ManagementService {\n  constructor(\n    private http: HttpClient\n  ) {}\n\n  getSync(): Observable<Sync> {\n    return this.http.get<Sync>(environment.restserver + \"/api/admin/sync\")\n  }\n\n  startSync(): Observable<Sync> {\n    return this.http.post<Sync>(environment.restserver + \"/api/admin/sync\", null);\n  }\n\n  deleteSync(): Observable<Sync> {\n    return this.http.delete<Sync>(environment.restserver + \"/api/admin/sync/dangling\")\n  }\n\n  removeDanglingSong(id: string): Observable<Sync> {\n    return this.http.delete<Sync>(environment.restserver + \"/api/admin/sync/dangling/\" + id)\n  }\n\n  removeEmptyAlbums(): Observable<Sync> {\n    return this.http.delete<Sync>(environment.restserver + \"/api/admin/sync/emptyalbums\")\n  }\n\n  renameAlbum(id: string): Observable<Sync> {\n    return this.http.put<Sync>(environment.restserver + \"/api/admin/sync/album/\" + id, null)\n  }\n}\n","import {RouterModule, Routes} from \"@angular/router\";\nimport {AuthGuardService} from \"../security/auth-guard.service\";\nimport {NgModule} from \"@angular/core\";\nimport {OverviewComponent} from \"./overview.component\";\n\nconst overviewRoutes: Routes = [\n  { path: 'overview', component: OverviewComponent, canActivate: [AuthGuardService] },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(overviewRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class OverviewRoutingModule {}\n","import {Component, OnInit} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {Info, Sync} from \"./overview.model\";\nimport {OverviewService} from \"./overview.service\";\nimport {Song} from \"../song/song.model\";\nimport {PlayerService} from \"../player/player.service\";\nimport {AuthService} from \"../security/auth.service\";\nimport {AlbumService} from \"../album/album.service\";\nimport {Album} from \"../album/album.model\";\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n  info: Info;\n  sync: Sync;\n\n  constructor(\n    private overviewService: OverviewService,\n    private playerService: PlayerService,\n    private albumService: AlbumService,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.overviewService.getInfo().subscribe(info => {\n      this.info = info;\n    });\n    this.overviewService.getSync().subscribe(sync => {\n      this.sync = sync;\n    });\n  }\n\n  goto(url: string) {\n    this.router.navigate([url]);\n  }\n\n  playSong(song: Song) {\n    this.playerService.addAndPlaySong(song);\n  }\n\n\n  isAdmin(): boolean {\n    return this.authService.isAdmin()\n  }\n\n  coverUrlForSong(song: Song): string {\n    return this.playerService.songCoverUrl(song);\n  }\n\n  coverUrlForAlbum(album: Album): string {\n    return this.albumService.albumCoverUrl(album);\n  }\n}\n","<mat-grid-list cols=\"2\" rowHeight=\"2:1\">\n  <mat-grid-tile>\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Recently added songs</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-list dense>\n          <mat-list-item class=\"multi\" *ngFor=\"let song of info?.songsRecentlyAdded\" (click)=\"playSong(song)\">\n            <img matListAvatar [src]=\"coverUrlForSong(song)\">\n            <p mat-line>{{song.title}}</p>\n            <p mat-line><small>{{song.artist?.name}}</small></p>\n          </mat-list-item>\n        </mat-list>\n      </mat-card-content>\n    </mat-card>\n  </mat-grid-tile>\n  <mat-grid-tile>\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Recently added albums</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-list dense>\n          <mat-list-item class=\"multi\" *ngFor=\"let album of info?.albumsRecentlyAdded\" (click)=\"goto('/song/album/' + album.albumId)\">\n            <img matListAvatar [src]=\"coverUrlForAlbum(album)\">\n            <p mat-line>{{album.title}}</p>\n          </mat-list-item>\n        </mat-list>\n      </mat-card-content>\n    </mat-card>\n  </mat-grid-tile>\n  <mat-grid-tile>\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Recently played songs</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-list dense>\n          <mat-list-item class=\"multi\" *ngFor=\"let song of info?.songsRecentlyPlayed\" (click)=\"playSong(song)\">\n            <img matListAvatar [src]=\"coverUrlForSong(song)\">\n            <p mat-line>{{song.title}}</p>\n            <p mat-line><small>{{song.artist?.name}}</small></p>\n          </mat-list-item>\n        </mat-list>\n      </mat-card-content>\n    </mat-card>\n  </mat-grid-tile>\n  <mat-grid-tile>\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Most played songs</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-list dense>\n          <mat-list-item class=\"multi\" *ngFor=\"let song of info?.songsMostPlayed\" (click)=\"playSong(song)\">\n            <img matListAvatar [src]=\"coverUrlForSong(song)\">\n            <p mat-line>{{song.title}}</p>\n            <p mat-line><small>{{song.artist?.name}}</small></p>\n            <p>{{song.playCount}}</p>\n          </mat-list-item>\n        </mat-list>\n      </mat-card-content>\n    </mat-card>\n  </mat-grid-tile>\n  <mat-grid-tile>\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Statistics</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-list dense>\n          <mat-list-item class=\"single\">\n            <p mat-line>Songs in library</p>\n            <p>{{info?.songCount}} ({{info?.totalLength | duration}} total)</p>\n          </mat-list-item>\n          <mat-list-item class=\"single\">\n            <p mat-line>Albums in library</p>\n            <p>{{info?.albumCount}}</p>\n          </mat-list-item>\n          <mat-list-item class=\"single\">\n            <p mat-line>Artists in library</p>\n            <p>{{info?.artistCount}}</p>\n          </mat-list-item>\n          <mat-list-item class=\"single\">\n            <p mat-line>Playlists in library</p>\n            <p>{{info?.playlistCount}}</p>\n          </mat-list-item>\n          <mat-list-item class=\"single\">\n            <p mat-line>Users</p>\n            <p>{{info?.userCount}}</p>\n          </mat-list-item>\n          <mat-list-item class=\"single\">\n            <p mat-line></p>\n            <p></p>\n          </mat-list-item>\n          <mat-list-item class=\"single\">\n            <p mat-line></p>\n            <p></p>\n          </mat-list-item>\n        </mat-list>\n      </mat-card-content>\n    </mat-card>\n  </mat-grid-tile>\n  <mat-grid-tile *ngIf=\"isAdmin()\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Sync state</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-list dense>\n          <mat-list-item class=\"single\">\n            <p mat-line>Sync state</p>\n            <p>{{sync?.state}}</p>\n          </mat-list-item>\n          <mat-list-item class=\"single\">\n            <p mat-line>Last sync</p>\n            <p>{{sync?.last_sync_started * 1000 | unixdate | date: 'short'}}</p>\n          </mat-list-item>\n          <mat-list-item class=\"single\">\n            <p mat-line>Last sync duration</p>\n            <p>{{sync?.last_sync_duration | duration}}</p>\n          </mat-list-item>\n          <mat-list-item class=\"single\">\n            <p mat-line>Songs found</p>\n            <p>{{sync?.songs_found}}</p>\n          </mat-list-item>\n          <mat-list-item class=\"single\">\n            <p mat-line>Songs added</p>\n            <p>{{sync?.new_songs_added}}</p>\n          </mat-list-item>\n          <mat-list-item class=\"single\">\n            <p mat-line>Not added</p>\n            <p>{{sync?.new_songs_problems}}</p>\n          </mat-list-item>\n          <mat-list-item class=\"single\" >\n            <p mat-line>Dangling songs</p>\n            <p>{{sync?.dangling_songs_found}}</p>\n          </mat-list-item>\n        </mat-list>\n      </mat-card-content>\n    </mat-card>\n  </mat-grid-tile>\n</mat-grid-list>\n","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {RouterModule} from \"@angular/router\";\nimport {SharedModule} from \"../shared/shared.module\";\nimport {OverviewComponent} from \"./overview.component\";\nimport {OverviewService} from \"./overview.service\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatGridListModule} from \"@angular/material/grid-list\";\nimport {MatListModule} from \"@angular/material/list\";\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule,\n    SharedModule,\n    MatCardModule,\n    MatGridListModule,\n    MatListModule\n  ],\n  declarations: [\n    OverviewComponent\n  ],\n  exports: [OverviewComponent],\n  providers: [\n    OverviewService\n  ]\n})\n\nexport class OverviewModule {\n}\n","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {Info, Sync} from \"./overview.model\";\nimport {AuthService} from \"../security/auth.service\";\n\n@Injectable()\nexport class OverviewService {\n  constructor(\n    private http: HttpClient\n    ) {}\n\n  getInfo(): Observable<Info> {\n    return this.http.get<Info>(environment.restserver + \"/api/info\");\n  }\n\n  getSync(): Observable<Sync> {\n    return this.http.get<Sync>(environment.restserver + \"/api/admin/sync\")\n  }\n}\n","import {Component, OnDestroy, OnInit} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {PlayerService} from \"./player.service\";\nimport {Song} from \"../song/song.model\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-play-queue',\n  templateUrl: './play-queue.component.html',\n  styleUrls: ['./play-queue.component.scss']\n})\nexport class PlayQueueComponent implements OnInit, OnDestroy {\n  songs: Song[];\n  songListSubscription: Subscription;\n\n  constructor(\n    private router: Router,\n    private playerService: PlayerService\n  ) {}\n\n  ngOnInit(): void {\n    this.songListSubscription = this.playerService.listchange$.subscribe(songs => {\n      this.songs = songs;\n    });\n    this.playerService.loadPlayqueue();\n  }\n\n  ngOnDestroy(): void {\n    this.songListSubscription.unsubscribe();\n  }\n\n  playSong(song: Song) {\n    this.playerService.playSong(song);\n  }\n\n  isCurrentSong(song: Song): boolean {\n    return this.playerService.currentSong === song;\n  }\n\n  playIndex(i: number) {\n    this.playerService.playSongByIndex(i);\n  }\n\n  deleteIndex(i: number) {\n    this.playerService.removeSongByIndex(i);\n  }\n\n  albumIndex(i: number) {\n    console.log(this.songs[i].album)\n    if (i < this.songs.length && this.songs[i].album) {\n      this.router.navigate([\"/song/album/\" + this.songs[i].album.albumId]);\n    }\n  }\n\n  hasAlbum(i: number): boolean {\n    if (i < this.songs.length && this.songs[i] && this.songs[i].album.title) {\n      return true\n    }\n    return false\n  }\n\n  artistIndex(i: number) {\n    if (i < this.songs.length && this.songs[i].artist) {\n      this.router.navigate([\"/song/artist/\" + this.songs[i].artist.artistId]);\n    }\n  }\n\n  hasArtist(i: number): boolean {\n    if (i < this.songs.length && this.songs[i] && this.songs[i].artist.name) {\n      return true\n    }\n    return false\n  }\n}\n","<mat-list dense cdkDrop>\n  <mat-list-item *ngFor=\"let song of songs; let i = index;\" cdkDrag>\n    <mat-icon mat-list-icon (click)=\"playSong(song)\">{{isCurrentSong(song) ? \"play_arrow\" : \"queue_music\"}}</mat-icon>\n    <p mat-line (click)=\"playSong(song)\">{{song.title}}</p>\n    <p mat-line (click)=\"playSong(song)\">\n      <small> {{song.artist?.name}} </small>\n    </p>\n    <p>\n      <small (click)=\"playSong(song)\">{{song.duration | duration}}</small>\n    </p>\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" [matMenuTriggerData]=\"{'index': i, 'song': song}\">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n  </mat-list-item>\n</mat-list>\n\n<mat-menu #menu=\"matMenu\">\n  <ng-template matMenuContent  let-index=\"index\">\n    <button mat-menu-item (click)=\"playIndex(index)\">\n      <mat-icon>play_arrow</mat-icon>\n      <span>Play</span>\n    </button>\n    <button mat-menu-item (click)=\"deleteIndex(index)\">\n      <mat-icon>delete</mat-icon>\n      <span>Delete</span>\n    </button>\n    <button *ngIf=\"hasArtist(index)\" mat-menu-item (click)=\"artistIndex(index)\">\n      <mat-icon>interpreter_mode</mat-icon>\n      <span>Artist</span>\n    </button>\n    <button *ngIf=\"hasAlbum(index)\"  mat-menu-item (click)=\"albumIndex(index)\">\n      <mat-icon>album</mat-icon>\n      <span>Album</span>\n    </button>\n  </ng-template>\n</mat-menu>\n","import { AfterViewInit, Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { Howl } from \"howler\";\nimport { Subscription } from \"rxjs\";\nimport { MatSlider } from \"@angular/material/slider\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\nimport { Song } from \"../song/song.model\";\nimport { PlayerService } from \"./player.service\";\nimport { PlayerDialog } from \"./player.dialog\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { TextinputDialogComponent } from \"../shared/textinput-dialog.component\";\nimport { YesnoAlertComponent } from \"../shared/yesno-alert.component\";\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.scss']\n})\nexport class PlayerComponent implements OnInit, AfterViewInit {\n  audio: Howl;\n  volume = 100;\n  position = 0;\n  progress = 0;\n  songPlaySubscription: Subscription;\n  hoverPosition = 0;\n\n  @Output() newSongLoaded: EventEmitter<Song> = new EventEmitter();\n\n  @ViewChild(\"volumeCtrl\", { static: true })\n  volumeControl: MatSlider;\n\n  constructor(\n    private playerService: PlayerService,\n    public snackBar: MatSnackBar,\n    public dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n    this.songPlaySubscription = this.playerService.play$.subscribe(song => {\n      this.playSong(song);\n      this.openSnackBar(`Now playing ${song.title} from ${song.artist.name}`, \"Show\");\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.volumeControl.input.subscribe(event => {\n      this.volumeChanged(event.value);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.songPlaySubscription.unsubscribe();\n    this.volumeControl.input.unsubscribe();\n  }\n\n  isCurrentSong(song: Song): boolean {\n    return this.playerService.currentSong === song;\n  }\n\n  playerReady(): boolean {\n    return !this.isNullOrUndefined(this.audio);\n  }\n\n  play() {\n    this.audio.play();\n  }\n\n  pause() {\n    if (this.audio.playing()) {\n      this.audio.pause();\n    } else {\n      this.audio.play();\n    }\n  }\n\n  stop() {\n    this.audio.stop();\n    this.playerService.currentSong = null;\n  }\n\n  next() {\n    this.playerService.nextSong();\n  }\n\n  previous() {\n    this.playerService.previousSong();\n  }\n\n  openFullscreen(): void {\n    let dialogRef = this.dialog.open(PlayerDialog, {\n      width: '100vh',\n      height: '100vh',\n      maxWidth: '100vh',\n      maxHeight: '100vh',\n      hasBackdrop: false\n    });\n  }\n\n  cover(): string {\n    if (this.playerService.currentSong === null || this.playerService.currentSong === undefined) {\n      return \"../assets/img/defaultAlbum.png\";\n    }\n    return this.playerService.songCoverUrl(this.playerService.currentSong);\n  }\n\n  volumeChanged(volume) {\n    this.volume = volume;\n    if (!this.isNullOrUndefined(this.audio)) {\n      this.audio.volume(this.volume / 100);\n    }\n  }\n\n  canPlay(): boolean {\n    return !this.isNullOrUndefined(this.playerService.currentSong);\n  }\n\n  isPlaying(): boolean {\n    return !this.isNullOrUndefined(this.audio) && this.audio.playing();\n  }\n\n  isPaused(): boolean {\n    return !this.isNullOrUndefined(this.audio) && !this.audio.playing() && this.position !== 0;\n  }\n\n  playSong(song: Song) {\n    this.playerService.currentSong = song;\n    if (!this.isNullOrUndefined(this.audio)) {\n      this.audio.unload();\n    }\n    this.audio = new Howl({\n      src: this.playerService.songStreamUrl(song),\n      format: [\"mp3\"],\n      volume: this.volume / 100,\n      onend: soundId => this.next()\n    });\n    this.audio.play();\n    setInterval(() => {\n      const pos: any = this.audio.seek();\n      this.position = (pos instanceof Howl) ? 0 : Math.round(pos);\n      this.progress = (pos instanceof Howl) ? 0 : Math.round(pos * 100.0 / this.audio.duration());\n    }, 1000);\n\n    this.audio.on('load', (id) => {\n      this.newSongLoaded.emit(song);\n    });\n  }\n\n  seek(event) {\n    const newPosition = this.calculateSongPosition(event.offsetX, event.srcElement.clientWidth.toFixed(0));\n    this.audio.seek(newPosition);\n  }\n\n  setHoverPosition(event): void {\n    this.hoverPosition = this.calculateSongPosition(event.offsetX, event.srcElement.clientWidth.toFixed(0));\n  }\n\n  currentSong(): Song {\n    return this.playerService.currentSong;\n  }\n\n  createPlaylist() {\n    const dialogRef = this.dialog.open(TextinputDialogComponent, {\n      width: '400px',\n      data: { title: \"Create playlist from queue\", prompt: \"Enter playlist name\", input: \"\" }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (!this.isNullOrUndefined(result) && result != \"\") {\n        this.playerService.createPlaylist(result);\n      }\n    });\n  }\n\n  clearQueue() {\n    const dialogRef = this.dialog.open(YesnoAlertComponent, {\n      width: '400px',\n      data: { title: \"Empty play queue\", prompt: \"Are you sure?\" }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.playerService.clearQueue();\n      }\n    });\n  }\n\n  private calculateSongPosition(position: number, size: number): number {\n    if (this.canPlay()) {\n      return Math.round(this.playerService.currentSong.duration * position / size);\n    }\n    return 0;\n  }\n\n  private openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n  private isNullOrUndefined(o: any): boolean {\n    return o === null || o === undefined;\n  }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"start\" fxLauoutGap=\"10px\">\n<div id=\"player\">\n  <mat-card class=\"player\">\n    <mat-card-header>\n      <mat-card-title>{{currentSong()?.title}}</mat-card-title>\n      <mat-card-subtitle>{{currentSong()?.artist?.name}}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image [src]=\"cover()\" width=\"100%\">\n    <mat-card-content>\n      <mat-progress-bar\n        mode=\"determinate\"\n        [value]=\"progress\"\n        (click)=\"seek($event)\"\n        (mouseover)=\"setHoverPosition($event)\"\n      ></mat-progress-bar>\n      <p class=\"text-center\">\n        <small>{{position | duration}} / {{currentSong()?.duration | duration}}</small>\n      </p>\n      <div>\n        <button mat-icon-button (click)=\"previous()\">\n          <mat-icon>fast_rewind</mat-icon>\n        </button>\n        <button mat-icon-button (click)=\"play()\" [disabled]=\"!canPlay()\" [color]=\"isPlaying() ? 'accent' : 'basic'\"\n                [ngClass]=\"{'active': isPlaying()}\">\n          <mat-icon>play_arrow</mat-icon>\n        </button>\n        <button mat-icon-button (click)=\"pause()\" [ngClass]=\"{'active': isPaused()}\">\n          <mat-icon>pause</mat-icon>\n        </button>\n        <button mat-icon-button (click)=\"stop()\">\n          <mat-icon>stop</mat-icon>\n        </button>\n        <button mat-icon-button (click)=\"next()\">\n          <mat-icon>fast_forward</mat-icon>\n        </button>\n      </div>\n      <button mat-icon-button (click)=\"volumeChanged(0)\">\n        <mat-icon>volume_down</mat-icon>\n      </button>\n      <mat-slider color=\"primary\" min=\"0\" max=\"100\" step=\"1\" [value]=\"volume\" #volumeCtrl></mat-slider>\n      <button mat-icon-button (click)=\"volumeChanged(100)\">\n        <mat-icon>volume_up</mat-icon>\n      </button>\n      <button mat-icon-button (click)=\"createPlaylist()\" matTooltip=\"Create playlist from play queue\">\n        <mat-icon>create</mat-icon>\n      </button>\n      <button mat-icon-button (click)=\"clearQueue()\" matTooltip=\"Empty play queue\">\n        <mat-icon>clear</mat-icon>\n      </button>\n    </mat-card-content>\n  </mat-card>\n</div>\n\n<div id=\"play-queue\">\n  <app-play-queue></app-play-queue>\n</div>\n</div>\n","import {Component, Inject} from \"@angular/core\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"player-dialog\",\n  templateUrl: \"player.dialog.html\",\n  styleUrls: [\"player.dialog.scss\"]\n})\nexport class PlayerDialog {\n\n  constructor(public dialogRef: MatDialogRef<PlayerDialog>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n  onCloseClicked(): void {\n    this.dialogRef.close();\n  }\n}\n","<button\n        class=\"close-button\"\n        mat-button\n        mat-dialog-close\n        (click)=\"onCloseClicked()\"\n        ><mat-icon>close</mat-icon></button>\n<div mat-dialog-content>\n    <app-player></app-player>\n</div>\n","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {PlayerComponent} from \"./player.component\";\nimport {PlayerService} from \"./player.service\";\nimport {SharedModule} from \"../shared/shared.module\";\nimport {PlayQueueComponent} from \"./play-queue.component\";\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatDividerModule} from \"@angular/material/divider\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {MatProgressBarModule} from \"@angular/material/progress-bar\";\nimport {MatSliderModule} from \"@angular/material/slider\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {PlayerDialog} from \"./player.dialog\";\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        DragDropModule,\n        SharedModule,\n        FlexLayoutModule,\n        MatButtonModule,\n        MatCardModule,\n        MatDividerModule,\n        MatIconModule,\n        MatListModule,\n        MatMenuModule,\n        MatProgressBarModule,\n        MatSliderModule,\n        MatSnackBarModule,\n        MatTooltipModule\n    ],\n    declarations: [\n        PlayerComponent,\n        PlayQueueComponent,\n        PlayerDialog\n    ],\n    exports: [\n        PlayerComponent\n    ],\n    providers: [\n        PlayerService\n    ]\n})\n\nexport class PlayerModule {\n}\n","import { Injectable } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\nimport { Song } from \"../song/song.model\";\nimport { environment } from \"../../environments/environment\";\nimport { AuthService } from \"../security/auth.service\";\nimport { PlaylistService } from \"../playlist/playlist.service\";\nimport { Playlist } from \"../playlist/playlist.model\";\n\n@Injectable()\nexport class PlayerService {\n  private playSource: Subject<Song> = new Subject<Song>();\n  private listChange: Subject<Song[]> = new Subject<Song[]>();\n  play$ = this.playSource.asObservable();\n  listchange$ = this.listChange.asObservable();\n\n  currentSong: Song;\n  songlist: Song[] = [];\n\n  constructor(private authService: AuthService, private playlistService: PlaylistService) { }\n\n  playSong(song: Song) {\n    this.currentSong = song;\n    this.playSource.next(song);\n  }\n\n  addAndPlaySong(song: Song) {\n    let found = this.songlist.find(s => s.songId == song.songId);\n    if (found === null || found === undefined) {\n      this.addSong(song);\n      found = song;\n    }\n    this.playSong(found);\n  }\n\n  addSong(song: Song) {\n    this.songlist.push(song);\n    this.storePlayqueue();\n    this.listChange.next(this.songlist);\n  }\n\n  clearQueue() {\n    this.songlist = [];\n    this.storePlayqueue();\n    this.listChange.next(this.songlist);\n  }\n\n  createPlaylist(name: string) {\n    let pl: Playlist = new Playlist(null, name, null);\n    this.playlistService.savePlaylist(pl).subscribe(p => {\n      let songIds: string[] = [];\n      for (let song of this.songlist) {\n        songIds.push(song.songId);\n      }\n      this.playlistService.addSongsToPlaylist(p.playlistId, songIds).subscribe(() => {\n        console.log(\"Success writing playlist\")\n      }, error => { console.log(\"Error writing playlist: \" + error) });\n    }, error => { console.log(\"Error creating playlist: \" + error) });\n  }\n\n  nextSong() {\n    if (this.songlist.length > 0) {\n      if (this.currentSong === null || this.currentSong === undefined) {\n        this.playSong(this.songlist[0]);\n      } else {\n        const index = this.songlist.indexOf(this.currentSong) + 1;\n        if (index < this.songlist.length) {\n          this.playSong(this.songlist[index]);\n        }\n      }\n    }\n  }\n\n  previousSong() {\n    if (this.songlist.length > 0) {\n      if (this.currentSong === null || this.currentSong === undefined) {\n        this.playSong(this.songlist[0]);\n      } else {\n        const index = this.songlist.indexOf(this.currentSong) - 1;\n        if (index >= 0) {\n          this.playSong(this.songlist[index]);\n        }\n      }\n    }\n  }\n\n  removeSongByIndex(i: number) {\n    if (i < this.songlist.length) {\n      this.songlist.splice(i, 1);\n      this.storePlayqueue();\n      this.listChange.next(this.songlist);\n    }\n  }\n\n  playSongByIndex(i: number) {\n    if (i < this.songlist.length) {\n      this.playSong(this.songlist[i]);\n    }\n  }\n\n  songCoverUrl(song: Song): string {\n    return environment.restserver + \"/api/song/\" + song.songId + \"/cover?bearer=\" + encodeURIComponent(this.authService.getToken());\n  }\n\n  songStreamUrl(song: Song): string {\n    return environment.restserver + \"/api/song/\" + song.songId + \"/stream?bearer=\" + encodeURIComponent(this.authService.getToken());\n  }\n\n  private LOCALSTORAGE_PREFIX = \"PLAYQUEUE-\";\n\n  storePlayqueue() {\n    let username = this.authService.getLoggedInUsername();\n    localStorage.setItem(this.LOCALSTORAGE_PREFIX + username, JSON.stringify(this.songlist));\n    console.log(\"Saved currend playqueue\");\n  }\n\n  loadPlayqueue() {\n    console.log(\"Try to load playqueue\");\n    let username = this.authService.getLoggedInUsername();\n    let s = localStorage.getItem(this.LOCALSTORAGE_PREFIX + username);\n    if (s !== null) {\n      this.songlist = JSON.parse(s);\n      console.log(\"loaded currend playqueue\");\n      this.listChange.next(this.songlist);\n    }\n  }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { PlaylistService } from \"./playlist.service\";\nimport { Playlist } from \"./playlist.model\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-playlist-detail',\n  templateUrl: './playlist-detail.component.html',\n  styleUrls: ['./playlist-detail.component.scss']\n})\nexport class PlaylistDetailComponent implements OnInit {\n  playlist: Playlist;\n\n  @ViewChild('name', { static: true }) nameInput: ElementRef;\n  @ViewChild('query') queryInput: ElementRef;\n\n  KIND_QUERY = \"query\";\n  KIND_EMPTY = \"empty\";\n\n  kind = this.KIND_QUERY;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private playlistService: PlaylistService) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((params) => {\n      if (params.get('id') === null || params.get('id') === \"new\") {\n        this.playlist = new Playlist(\"\", \"\", \"\");\n        return;\n      }\n      this.playlistService.getPlaylist(params.get('id')).subscribe((playlist: Playlist) => {\n        this.playlist = playlist;\n        this.nameInput.nativeElement.value = this.playlist.name;\n        if (this.queryInput !== null && this.queryInput !== undefined) {\n          this.queryInput.nativeElement.value = this.playlist.query;\n          this.kind = this.KIND_QUERY;\n        } else {\n          this.kind = this.KIND_EMPTY;\n        }\n      });\n    });\n  }\n\n  save() {\n    this.playlist.name = this.nameInput.nativeElement.value;\n    if (this.queryInput !== null && this.queryInput !== undefined) {\n      this.playlist.query = this.queryInput.nativeElement.value;\n    }\n    this.playlistService.savePlaylist(this.playlist).subscribe(() => {\n      this.router.navigate([\"/playlist\"]);\n    });\n  }\n\n  isNew(): boolean {\n    if (this.playlist !== null && this.playlist !== undefined) {\n      if (this.playlist.playlistId === \"\" || this.playlist.playlistId === null) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  queryAdd(s: string) {\n    this.queryInput.nativeElement.value = this.queryInput.nativeElement.value + s;\n    this.queryInput.nativeElement.focus();\n  }\n}\n","<mat-button-toggle-group class=\"full-width\" name=\"type\" aria-label=\"Playlisttype\" *ngIf=\"isNew()\">\n  <mat-button-toggle value=\"query\" [checked]=\"kind===KIND_QUERY\" (click)=\"kind=KIND_QUERY\">With query</mat-button-toggle>\n  <mat-button-toggle value=\"empty\" [checked]=\"kind===KIND_EMPTY\" (click)=\"kind=KIND_EMPTY\">Manual selection</mat-button-toggle>\n</mat-button-toggle-group>\n<form class=\"edit-playlist-form\">\n  <mat-form-field class=\"full-width\" hideRequiredMarker>\n    <input matInput placeholder=\"Name\" #name required>\n  </mat-form-field>\n\n  <mat-form-field class=\"full-width\" *ngIf=\"kind===KIND_QUERY\">\n    <input matInput placeholder=\"Query\" #query>\n  </mat-form-field>\n\n  <button mat-flat-button color=\"primary\" (click)=\"save()\">\n    <mat-icon>done</mat-icon>\n    Save\n  </button>\n  <a mat-flat-button routerLink=\"/playlist\"><mat-icon>undo</mat-icon>Cancel</a>\n  <a mat-flat-button color=\"accent\" routerLink=\"/song/playlist/{{playlist?.playlistId}}\" *ngIf=\"!isNew()\"><mat-icon>list</mat-icon>Show</a>\n</form>\n<hr/>\n<mat-accordion [multi]=\"true\" *ngIf=\"kind===KIND_QUERY\">\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Available fields\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <button mat-button (click)=\"queryAdd('album')\">album</button>\n    <button mat-button (click)=\"queryAdd('artist')\">artist</button>\n    <button mat-button (click)=\"queryAdd('song')\">song</button>\n    <button mat-button (click)=\"queryAdd('genre')\">genre</button>\n    <button mat-button (click)=\"queryAdd('duration')\">duration</button>\n    <button mat-button (click)=\"queryAdd('year')\">year</button>\n    <button mat-button (click)=\"queryAdd('track')\">track</button>\n    <button mat-button (click)=\"queryAdd('path')\">path</button>\n    <button mat-button (click)=\"queryAdd('bitrate')\">bitrate</button>\n    <button mat-button (click)=\"queryAdd('samplerate')\">samplerate</button>\n  </mat-expansion-panel>\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Available logical operations\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <button mat-button (click)=\"queryAdd('==')\">==</button>\n    <button mat-button (click)=\"queryAdd('!=')\">!=</button>\n    <button mat-button (click)=\"queryAdd('>')\">&gt;</button>\n    <button mat-button (click)=\"queryAdd('>=')\">&gt;=</button>\n    <button mat-button (click)=\"queryAdd('<')\">&lt;</button>\n    <button mat-button (click)=\"queryAdd('<=')\">&lt;=</button>\n    <button mat-button (click)=\"queryAdd('&&')\">&amp;&amp;</button>\n    <button mat-button (click)=\"queryAdd('||')\">||</button>\n  </mat-expansion-panel>\n</mat-accordion>\n","import {RouterModule, Routes} from \"@angular/router\";\nimport {AuthGuardService} from \"../security/auth-guard.service\";\nimport {NgModule} from \"@angular/core\";\nimport {PlaylistComponent} from \"./playlist.component\";\nimport {PlaylistDetailComponent} from \"./playlist-detail.component\";\n\nconst playlistRoutes: Routes = [\n  { path: 'playlist', component: PlaylistComponent, canActivate: [AuthGuardService] },\n  { path: 'playlist/:id', component: PlaylistDetailComponent, canActivate: [AuthGuardService] },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(playlistRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class PlaylistRoutingModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {saveAs} from 'file-saver';\n\nimport {PlaylistService} from \"./playlist.service\";\nimport {Playlist, PlaylistCollection} from \"./playlist.model\";\n\n@Component({\n  selector: 'app-playlist',\n  templateUrl: './playlist.component.html',\n  styleUrls: ['./playlist.component.scss']\n})\nexport class PlaylistComponent implements OnInit {\n  playlists: Playlist[];\n\n  constructor(private playlistService: PlaylistService, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.playlistService.getPlaylists().subscribe((playlists: PlaylistCollection) => {\n      this.playlists = playlists.playlists;\n    });\n  }\n\n  delete(playlistId: string) {\n    this.playlistService.deletePlaylist(playlistId).subscribe(() => {\n      console.log(\"Playlist deleted\")\n      this.router.navigate([\"/playlist\"]);\n    });\n  }\n\n  xspf(playlistId: string) {\n    this.playlistService.exportPlaylistToXSPF(playlistId).subscribe(\n      data => {\n        saveAs(data, playlistId + \".xspf\");\n      },\n      error => console.error(error)\n    );\n  }\n}\n","<a mat-button routerLink=\"/playlist/new\"><mat-icon>add</mat-icon>Add playlist</a>\n<mat-list>\n  <mat-list-item *ngFor=\"let playlist of playlists\">\n    <a routerLink=\"/song/playlist/{{playlist.playlistId}}\">\n      <mat-icon mat-list-icon color=\"accent\">list</mat-icon>\n    </a>\n    <a routerLink=\"/playlist/{{playlist.playlistId}}\">\n      <mat-icon mat-list-icon color=\"accent\">edit</mat-icon>\n    </a>\n    <a href=\"\" (click)=\"delete(playlist.playlistId)\">\n      <mat-icon mat-list-icon color=\"accent\">delete</mat-icon>\n    </a>\n    <a href=\"\" (click)=\"xspf(playlist.playlistId)\">\n      <mat-icon mat-list-icon color=\"accent\">save</mat-icon>\n    </a>\n    <h4>&nbsp;{{playlist.name}}</h4>\n  </mat-list-item>\n</mat-list>\n","import {Album} from \"../album/album.model\";\nimport {Paging} from \"../shared/paging.model\";\n\nexport class Playlist {\n  constructor(public playlistId: string, public name: string, public query: string) {}\n}\n\nexport class PlaylistCollection {\n  constructor(public playlists: Playlist[], public paging: Paging, public total: number) {}\n}\n","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {PlaylistComponent} from \"./playlist.component\";\nimport {PlaylistDetailComponent} from \"./playlist-detail.component\";\nimport {PlaylistService} from \"./playlist.service\";\nimport {RouterModule} from \"@angular/router\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatButtonToggleModule} from \"@angular/material/button-toggle\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatListModule} from \"@angular/material/list\";\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule\n  ],\n  declarations: [\n    PlaylistComponent,\n    PlaylistDetailComponent\n  ],\n  exports: [\n    PlaylistComponent\n  ],\n  providers: [\n    PlaylistService\n  ]\n})\n\nexport class PlaylistModule {\n}\n","import {Injectable} from \"@angular/core\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable} from \"rxjs/index\";\nimport {environment} from \"../../environments/environment\";\nimport {Playlist, PlaylistCollection} from \"./playlist.model\";\n\n@Injectable()\nexport class PlaylistService {\n\n  constructor(private http: HttpClient) {}\n\n  getPlaylists(): Observable<PlaylistCollection> {\n    const headers = new HttpHeaders({\n      'x-klaus': 'fred'\n    });\n    return this.http.get<PlaylistCollection>(environment.restserver + \"/api/playlist\", {headers: headers});\n  }\n\n  getStaticPlaylists(): Observable<PlaylistCollection> {\n    return this.http.get<PlaylistCollection>(environment.restserver + \"/api/playlist?kind=static\");\n  }\n\n  getPlaylist(id: string): Observable<Playlist> {\n    return this.http.get<Playlist>(environment.restserver + \"/api/playlist/\" + id);\n  }\n\n  addSongsToPlaylist(playlistId: string, songIds: string[]): Observable<any> {\n    return this.http.post(environment.restserver + \"/api/playlist/\" + playlistId + \"/songs\", songIds);\n  }\n\n  savePlaylist(playlist: Playlist): Observable<Playlist> {\n    console.log(\"Save: \" + playlist.playlistId + \"=\" + playlist.name);\n    if (playlist.playlistId === null || playlist.playlistId === \"\") {\n      return this.http.post<Playlist>(environment.restserver + \"/api/playlist\", playlist);\n    } else {\n      return this.http.put<Playlist>(environment.restserver + \"/api/playlist\", playlist);\n    }\n  }\n  deletePlaylist(playlistId: string): Observable<number> {\n    return this.http.delete<number>(environment.restserver + \"/api/playlist/\" + playlistId);\n  }\n\n  exportPlaylistToXSPF(playlistId: string): Observable<any> {\n    return this.http.get(environment.restserver + \"/api/playlist/\" + playlistId + \"/xspf\", {responseType: \"blob\"});\n  }\n}\n","import {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {Auth} from \"./auth.service\";\nimport {Injectable} from \"@angular/core\";\nimport {AuthService} from \"./auth.service\";\nimport { map, take } from \"rxjs/operators\";\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n    return this.authService.isLoggedIn\n      .pipe(\n        take(1),\n        map((isLoggedIn: boolean) => {\n          if (!isLoggedIn){\n            this.router.navigate(['/login']);\n            return false;\n          }\n          return true;\n      }));\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { environment } from \"../../environments/environment\";\n\n@Injectable()\nexport class AuthService {\n  private AUTH = \"go2music_auth\";\n  private auth: Auth = JSON.parse(localStorage.getItem(this.AUTH));\n\n  private loggedIn = new BehaviorSubject<boolean>(false);\n  private token: string = null;\n\n  constructor(private router: Router, private http: HttpClient) {\n    if (this.auth) {\n      this.token = this.auth.token;\n      this.loggedIn.next(true);\n    }\n  }\n\n  get isLoggedIn() {\n    return this.loggedIn.asObservable();\n  }\n\n  isAdmin() {\n    if (this.isNullOrUndefined(this.auth)) {\n      return false;\n    }\n    return this.auth.isAdmin;\n  }\n\n  getToken() {\n    return this.token;\n  }\n\n  getLoggedInUsername(): string {\n    if (!this.isNullOrUndefined(this.auth)) {\n      return this.auth.username;\n    }\n    return \"\";\n  }\n\n  login(username: string, password: string) {\n    if (username !== '' && password !== '') {\n      let headers = new HttpHeaders();\n      headers = headers.append(\"Authorization\", \"Basic \" + btoa(username + \":\" + password));\n      // headers = headers.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n      this.http.get(environment.restserver + \"/token\", { headers: headers }).subscribe(response => {\n        this.token = response['token'];\n        this.auth = new Auth(response['token'], username, response['role'] === \"admin\");\n        console.log(\"Successfully logged in with token \" + this.token);\n        this.loggedIn.next(true);\n        localStorage.setItem(this.AUTH, JSON.stringify(this.auth));\n        this.router.navigate(['/']);\n      }, error => {\n        console.log(\"Got an error while logging in\");\n        this.loggedIn.next(false);\n      });\n    }\n  }\n\n  logout() {                            // {4}\n    this.loggedIn.next(false);\n    this.auth = null;\n    localStorage.removeItem(this.AUTH);\n    this.router.navigate(['/login']);\n  }\n\n  // for debugging\n  clearToken(): void {\n    this.token = null;\n  }\n\n  private isNullOrUndefined(o: any): boolean {\n    return o === null || o === undefined;\n  }\n}\n\nexport class Auth {\n  constructor(public token: string, public username: string, public isAdmin: boolean) { }\n}\n","import {Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AuthService} from \"./auth.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  message: string;\n\n  username: string;\n  password: string;\n\n  constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute) {}\n\n  login() {\n    this.authService.login(this.username, this.password);\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      this.message = params.get(\"message\");\n    });\n  }\n}\n","<mat-card class=\"login-card\">\n  <form class=\"login-form\">\n    <mat-card-header>\n      <mat-card-title><span>Login</span></mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <table class=\"full-width-input\" cellspacing=\"0\">\n        <tr>\n          <td>\n            <mat-form-field class=\"full-width-input\">\n              <input matInput placeholder=\"Username\" [(ngModel)]=\"username\" name=\"username\" required>\n            </mat-form-field>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <mat-form-field class=\"full-width-input\">\n              <input matInput placeholder=\"Password\" [(ngModel)]=\"password\" type=\"password\" name=\"password\" required>\n            </mat-form-field>\n          </td>\n        </tr>\n      </table>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button (click)=\"login()\" color=\"primary\">Login</button>\n    </mat-card-actions>\n  </form>\n</mat-card>\n","import {RouterModule, Routes} from \"@angular/router\";\nimport {NgModule} from \"@angular/core\";\nimport {LoginComponent} from \"./login.component\";\n\nconst securityRoutes: Routes = [\n  { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(securityRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class SecurityRoutingModule {}\n","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\nimport {RouterModule} from \"@angular/router\";\nimport {LoginComponent} from \"./login.component\";\nimport {FormsModule} from \"@angular/forms\";\nimport {AuthService} from \"./auth.service\";\nimport {AuthGuardService} from \"./auth-guard.service\";\nimport {TokenInterceptor} from \"./token.interceptor\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule\n  ],\n  declarations: [\n    LoginComponent\n  ],\n  exports: [\n    LoginComponent\n  ],\n  providers: [\n    AuthService,\n    AuthGuardService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ]\n})\n\nexport class SecurityModule {\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor, HttpErrorResponse, HttpHeaders\n} from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport {Observable, throwError} from 'rxjs';\nimport { catchError } from \"rxjs/operators\";\nimport {Router} from \"@angular/router\";\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(public auth: AuthService, private router: Router) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    if (!request.url.endsWith(\"/token\")) {\n      request = request.clone({\n        headers: new HttpHeaders({\n          'Authorization': `Bearer ${this.auth.getToken()}`\n        })\n      });\n    }\n\n    return next.handle(request).pipe(\n      catchError(response => {\n        if (response instanceof HttpErrorResponse) {\n          if (response.status === 401) {\n            this.router.navigate([\"/login\"/*, {message: \"Token not found or invalid.\"}*/]);\n          }\n        }\n        return throwError(response);\n      }));\n  }\n}\n","import { Paging } from \"./paging.model\";\n\nexport class BaseService {\n  getPagingForUrl(paging?: Paging): string {\n    let s = \"\";\n    if (paging === null || paging === undefined) {\n      return s;\n    }\n    if (paging.sort !== null && paging.sort !== undefined) {\n      s += \"sort=\" + paging.sort;\n      if (paging.dir === null || paging.dir === undefined) {\n        s += \"&dir=asc\";\n      } else {\n        s += \"&dir=\" + paging.dir;\n      }\n    }\n    if (paging.size > 0) {\n      if (s !== \"\") {\n        s += \"&\";\n      }\n      s += \"size=\" + paging.size;\n      if (paging.page > 0) {\n        s += \"&page=\" + paging.page;\n      }\n    }\n    if (s !== \"\") {\n      s = \"?\" + s;\n    }\n    return s;\n  }\n}\n","import {Pipe, PipeTransform} from \"@angular/core\";\n\n@Pipe({name: 'duration'})\nexport class DurationPipe implements PipeTransform {\n\n  transform(value: number): string {\n    if (isNaN(value)) {\n      return \"\";\n    }\n    const hours = Math.trunc(value / 3600);\n    let seconds = value % 3600;\n    const minutes = Math.trunc(seconds / 60);\n    seconds = seconds % 60;\n    if (hours > 0) {\n      return \"\" + hours + \":\" + this.pad(minutes, 2) + \":\" + this.pad(seconds, 2);\n    }\n    return \"\" + minutes + \":\" + this.pad(seconds, 2);\n  }\n\n  pad(num: number, size: number): string {\n    return ('000000000' + num).substr(-size);\n  }\n}\n","export class Paging {\n  constructor(public page: number,\n              public size: number,\n              public sort: string,\n              public dir: string) {\n  }\n}\n","import {NgModule} from \"@angular/core\";\nimport {DurationPipe} from \"./duration.pipe\";\nimport {UnixdatePipe} from \"./unixdate.pipe\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {TextinputDialogComponent} from \"./textinput-dialog.component\";\nimport {FormsModule} from \"@angular/forms\";\nimport {YesnoAlertComponent} from \"./yesno-alert.component\";\n\n@NgModule({\n    imports: [\n        FormsModule,\n        MatButtonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule\n    ],\n    declarations: [\n        DurationPipe,\n        UnixdatePipe,\n        TextinputDialogComponent,\n        YesnoAlertComponent\n    ],\n    exports: [\n        DurationPipe,\n        UnixdatePipe,\n        TextinputDialogComponent,\n        YesnoAlertComponent\n    ]\n})\n\nexport class SharedModule {}\n","import {Component, Inject} from \"@angular/core\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\n\nexport class TextinputData {\n  constructor(public title: string, public prompt: string, public input: string) {}\n}\n\n@Component({\n  selector: 'textinput-dialog',\n  templateUrl: 'textinput-dialog.component.html',\n})\nexport class TextinputDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<TextinputDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: TextinputData) {}\n\n  onCancelClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>{{data.title}}</h1>\n<div mat-dialog-content>\n  <mat-form-field>\n    <input matInput [(ngModel)]=\"data.input\" placeholder=\"{{data.prompt}}\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onCancelClick()\">Cancel</button>\n  <button mat-button [mat-dialog-close]=\"data.input\" cdkFocusInitial>Ok</button>\n</div>\n","import {Pipe, PipeTransform} from \"@angular/core\";\n\n@Pipe({name: \"unixdate\"})\nexport class UnixdatePipe implements PipeTransform {\n\n  transform(value: number): Date {\n    return new Date(value);\n  }\n}\n","import {Component, Inject} from \"@angular/core\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\n\nexport class AlertData {\n  constructor(public title: string, public prompt: string) {}\n}\n\n@Component({\n  selector: 'yesno-alert',\n  templateUrl: 'yesno-alert.component.html',\n})\nexport class YesnoAlertComponent {\n  constructor(\n    public dialogRef: MatDialogRef<YesnoAlertComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: AlertData) {}\n}\n","<h2 mat-dialog-title>{{data.title}}</h2>\n<mat-dialog-content>{{data.prompt}}</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button mat-dialog-close>No</button>\n  <button mat-button [mat-dialog-close]=\"true\">Yes</button>\n</mat-dialog-actions>\n","import {Component, OnInit} from \"@angular/core\";\nimport {MatDialogRef} from \"@angular/material/dialog\";\nimport {PlaylistService} from \"../playlist/playlist.service\";\nimport {Playlist} from \"../playlist/playlist.model\";\n\n@Component({\n  selector: 'app-playlist-select-dialog',\n  templateUrl: './playlist-select-dialog.component.html',\n  styleUrls: ['./playlist-select-dialog.component.css']\n})\nexport class PlaylistSelectDialogComponent implements OnInit {\n  playlists: Playlist[];\n\n  selectedPlaylistId: string;\n\n  constructor(\n    private playlistService: PlaylistService,\n    private dialogRef: MatDialogRef<PlaylistSelectDialogComponent>) {\n  }\n\n  ngOnInit() {\n    this.playlistService.getStaticPlaylists().subscribe(playlistCollection => this.playlists = playlistCollection.playlists);\n  }\n\n  save() {\n    this.dialogRef.close(this.selectedPlaylistId);\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Add song to playlist</h2>\n\n<mat-dialog-content>\n  <mat-form-field>\n    <mat-select placeholder=\"Playlist\" [(value)]=\"selectedPlaylistId\">\n      <mat-option *ngFor=\"let playlist of playlists\" [value]=\"playlist.playlistId\">\n        {{playlist.name}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field></mat-dialog-content>\n\n<mat-dialog-actions>\n  <button class=\"mat-raised-button\"(click)=\"close()\">Close</button>\n  <button class=\"mat-raised-button mat-primary\"(click)=\"save()\">Save</button>\n</mat-dialog-actions>\n","import {AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild} from \"@angular/core\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {debounceTime, distinctUntilChanged, tap} from \"rxjs/operators\";\nimport {fromEvent, merge} from \"rxjs\";\nimport {saveAs} from 'file-saver';\nimport {MatSort} from \"@angular/material/sort\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\n\nimport {Song} from \"./song.model\";\nimport {SongService} from \"./song.service\";\nimport {PlayerService} from \"../player/player.service\";\nimport {PlaylistSelectDialogComponent} from \"./playlist-select-dialog.component\";\nimport {PlaylistService} from \"../playlist/playlist.service\";\nimport {SongDataSource} from \"./song.datasource\";\nimport {Paging} from \"../shared/paging.model\";\n\n@Component({\n  selector: 'app-song-list',\n  templateUrl: './song-list.component.html',\n  styleUrls: ['./song-list.component.scss']\n})\nexport class SongListComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild('input', { static: true }) input: ElementRef;\n\n  columnDefs = [\n    {name: 'title', title: 'Title'},\n    {name: 'artist.name', title: 'Artist'},\n    {name: 'album.title', title: 'Album'},\n    {name: 'track', title: 'Tack'},\n    {name: 'genre', title: 'Genre'},\n    {name: 'yearPublished', title: 'Year'}/*,\n    {name: 'duration', title: 'Duration'}*/\n  ];\n\n  headline = \"\";\n  dataSource: SongDataSource;\n\n  kind = \"\";\n  anyId = \"\";\n\n  pageSize = 10;\n  pageSizeOptions = [5, 10, 20, 30];\n  total = 0;\n\n  @Input()\n  embedded = false;\n\n  displayedColumns = ['command', 'title', 'artist.name', 'album.title', 'track', 'genre', 'yearPublished', 'duration'];\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private songService: SongService,\n    private playerService: PlayerService,\n    private playlistService: PlaylistService,\n    private dialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n    if (localStorage.getItem(\"pageSize\")) {\n      this.pageSize = +localStorage.getItem(\"pageSize\");\n    }\n    this.dataSource = new SongDataSource(this.songService);\n    if (!this.embedded) {\n      this.route.paramMap.subscribe((params) => {\n        if (params.has(\"type\")) {\n          this.kind = params.get(\"type\");\n          this.anyId = params.get(\"id\");\n        }\n        let sortField = \"\";\n        if (this.kind === \"album\") {\n          sortField = \"track\";\n        } else if (this.kind === \"artist\") {\n          sortField = \"album.name\";\n        }\n        this.dataSource.loadSongs(this.kind, this.anyId, \"\", new Paging(0, this.pageSize, sortField, \"asc\"));\n        this.dataSource.songTotalSubject.subscribe(total => {\n          this.total = total;\n        });\n        this.dataSource.songDescriptionSubject.subscribe(s => this.headline = s);\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    // server-side search\n    fromEvent(this.input.nativeElement, 'keyup')\n      .pipe(\n        debounceTime(150),\n        distinctUntilChanged(),\n        tap(() => {\n          this.paginator.pageIndex = 0;\n          this.loadSongsPage();\n        })\n      )\n      .subscribe();\n\n    // reset the paginator after sorting\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        tap(() => this.loadSongsPage())\n      )\n      .subscribe();\n  }\n\n  loadSongsPage() {\n    localStorage.setItem(\"pageSize\", \"\" + this.paginator.pageSize);\n    this.dataSource.loadSongs(this.kind, this.anyId, this.input.nativeElement.value, new Paging(\n      this.paginator.pageIndex,\n      this.paginator.pageSize,\n      this.sort.active,\n      this.sort.direction));\n  }\n\n  playSong(song: Song) {\n    this.playerService.addAndPlaySong(song);\n  }\n\n  queueSong(song: Song) {\n    this.playerService.addSong(song);\n  }\n\n  queueSongs() {\n    this.dataSource.songs.forEach(song => this.playerService.addSong(song));\n  }\n\n  addSongToPlaylist(song: Song) {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n\n    const dialog = this.dialog.open(PlaylistSelectDialogComponent, dialogConfig);\n    dialog.afterClosed().subscribe(v => {\n      if (v !== undefined) {\n        this.playlistService.addSongsToPlaylist(v, [song.songId]).subscribe(r => console.log(r));\n      }\n    });\n  }\n\n  getProperty = (obj, path) => (\n    path.split('.').reduce((o, p) => o && o[p], obj)\n  )\n\n  cellClicked(song: Song, column: string) {\n    if (column === \"album.title\") {\n      console.log(\"navigate to album \" + song.album.albumId)\n      this.router.navigate([\"/song/album/\" + song.album.albumId]);\n    } else if (column === \"artist.name\") {\n      console.log(\"navigate to artist \" + song.artist.artistId)\n      this.router.navigate([\"/song/artist/\" + song.artist.artistId]);\n    } else if (column === \"genre\") {\n      this.router.navigate([\"/song/genre/\" + song.genre]);\n    }\n  }\n\n  downloadAlbum() {\n    this.songService.downloadAlbum(this.anyId).subscribe(\n      data => {\n        saveAs(data, this.kind + \" - \" + this.anyId);\n      },\n      error => console.error(error)\n    );\n  }\n\n  downloadPlaylist() {\n    this.songService.downloadPlaylist(this.anyId).subscribe(\n      data => {\n        saveAs(data, this.kind + \" - \" + this.anyId);\n      },\n      error => console.error(error)\n    )\n  }\n}\n","<div class=\"song\" [ngClass]=\"{'cover':kind==='album'}\">\n  <span [style.visibility]=\"kind!=='' ? 'visible' : 'hidden'\">{{headline}}</span>\n  <mat-icon\n    *ngIf=\"kind==='album'\"\n    class=\"only-on-hover\"\n    color=\"accent\"\n    (click)=\"downloadAlbum()\">get_app\n  </mat-icon>\n  <mat-icon\n    *ngIf=\"kind==='playlist'\"\n    class=\"only-on-hover\"\n    color=\"accent\"\n    (click)=\"downloadPlaylist()\">get_app\n  </mat-icon>\n  <mat-form-field [style.visibility]=\"kind==='' ? 'visible' : 'hidden'\">\n    <mat-placeholder><mat-icon>search</mat-icon></mat-placeholder>\n    <input matInput #input>\n  </mat-form-field>\n\n  <div class=\"spinner-container\" *ngIf=\"dataSource.loading$ | async\">\n    <mat-spinner></mat-spinner>\n  </div>\n\n  <mat-table matSort #songtable [dataSource]=\"dataSource\" class=\"songs-table\">\n    <ng-container matColumnDef=\"command\">\n      <mat-header-cell *matHeaderCellDef>\n        <mat-icon class=\"only-on-hover\" color=\"accent\" (click)=\"queueSongs()\">queue_music</mat-icon>\n      </mat-header-cell>\n      <mat-cell *matCellDef=\"let song\">\n        <mat-icon\n          class=\"only-on-hover\"\n          color=\"accent\"\n          (click)=\"playSong(song)\">play_arrow\n        </mat-icon>\n        <mat-icon\n          class=\"only-on-hover\"\n          color=\"accent\"\n          (click)=\"queueSong(song)\">queue_music\n        </mat-icon>\n        <mat-icon\n          class=\"only-on-hover\"\n          color=\"accent\"\n          (click)=\"addSongToPlaylist(song)\">playlist_add\n        </mat-icon>\n      </mat-cell>\n    </ng-container>\n    <ng-container *ngFor=\"let column of columnDefs\" [matColumnDef]=\"column.name\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>{{column.title}}</mat-header-cell>\n      <mat-cell *matCellDef=\"let song\" (click)=\"cellClicked(song, column.name)\"> {{ getProperty(song, column.name) }} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"duration\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Duration</mat-header-cell>\n      <mat-cell *matCellDef=\"let song\"> {{song.duration | duration}}</mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n\n  <mat-paginator #paginator\n                 [length]=\"total\"\n                 [pageSize]=\"pageSize\"\n                 [pageSizeOptions]=\"pageSizeOptions\"\n                 [showFirstLastButtons]=\"true\">\n  </mat-paginator>\n</div>\n","import {RouterModule, Routes} from \"@angular/router\";\nimport {AuthGuardService} from \"../security/auth-guard.service\";\nimport {NgModule} from \"@angular/core\";\nimport {SongListComponent} from \"./song-list.component\";\n\nconst songRoutes: Routes = [\n  { path: 'song', component: SongListComponent, canActivate: [AuthGuardService] },\n  { path: 'song/:type/:id', component: SongListComponent, canActivate: [AuthGuardService] }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(songRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class SongRoutingModule {}\n","import {DataSource} from \"@angular/cdk/table\";\nimport {Song, SongCollection} from \"./song.model\";\nimport {CollectionViewer} from \"@angular/cdk/collections\";\nimport {BehaviorSubject, Observable, of} from \"rxjs\";\nimport {SongService} from \"./song.service\";\nimport {Paging} from \"../shared/paging.model\";\nimport {catchError, finalize} from \"rxjs/operators\";\n\nexport class SongDataSource implements DataSource<Song> {\n  private songsSubject = new BehaviorSubject<Song[]>([]);\n  public songTotalSubject = new BehaviorSubject<number>(0);\n  public songDescriptionSubject = new BehaviorSubject<string>(\"\");\n  private loadingSubject = new BehaviorSubject<boolean>(false);\n  public songs: Song[] = [];\n\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private songService: SongService) {\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<Song[]> {\n    return this.songsSubject.asObservable();\n  }\n\n  disconnect(collectionViewer: CollectionViewer): void {\n    this.songsSubject.complete();\n    this.songTotalSubject.complete();\n    this.songDescriptionSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n  loadSongs(kind: string, id: string, filter: string, paging: Paging) {\n    this.loadingSubject.next(true);\n\n    let songsObservable: Observable<SongCollection>;\n\n    if (kind === \"\") {\n      songsObservable = this.songService.getAllSongs(filter, paging);\n    } else if (kind === \"album\") {\n      songsObservable = this.songService.getAllSongsOfAlbum(id, paging);\n    } else if (kind === \"artist\") {\n      songsObservable = this.songService.getAllSongsOfArtist(id, paging);\n    } else if (kind === \"playlist\") {\n      songsObservable = this.songService.getAllSongsOfPlaylist(id, paging);\n    } else if (kind === \"age\") {\n      songsObservable = this.songService.getAllSongsOfYear(id, paging);\n    } else if (kind === \"genre\") {\n      songsObservable = this.songService.getAllSongsOfGenre(id, paging);\n    }\n    songsObservable\n      .pipe(\n        catchError(() => of(new SongCollection([], \"\", null, 0))),\n        finalize(() => this.loadingSubject.next(false))\n      )\n      .subscribe(songCollection => {\n        this.songTotalSubject.next(songCollection.total);\n        this.songDescriptionSubject.next(songCollection.description);\n        this.songsSubject.next(songCollection.songs);\n        this.songs = songCollection.songs;\n      });\n  }\n}\n","import {Album} from \"../album/album.model\";\nimport {Artist} from \"../artist/artist.model\";\nimport {Paging} from \"../shared/paging.model\";\n\nexport class Song {\n  constructor(\n    public songId: string,\n    public title: string,\n    public path: string,\n    public duration: number,\n    public bitrate: number,\n    public sampleRate: number,\n    public track: number,\n    public album: Album,\n    public artist: Artist,\n    public genre: string,\n    public added: number,\n    public yearPublished: string,\n    public cbrvbr: string,\n    public rating: number,\n    public filedate: number,\n    public mbid: string,\n    public playCount: number,\n  ) {}\n}\n\nexport class SongCollection {\n  constructor(public songs: Song[], public description, public paging: Paging, public total: number) {}\n}\n","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {RouterModule} from \"@angular/router\";\nimport {SongListComponent} from \"./song-list.component\";\nimport {PlaylistSelectDialogComponent} from \"./playlist-select-dialog.component\";\nimport {SongService} from \"./song.service\";\nimport {SharedModule} from \"../shared/shared.module\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {MatTableModule} from \"@angular/material/table\";\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        RouterModule,\n        SharedModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatPaginatorModule,\n        MatProgressSpinnerModule,\n        MatSelectModule,\n        MatSortModule,\n        MatTableModule\n    ],\n    declarations: [\n        SongListComponent,\n        PlaylistSelectDialogComponent\n    ],\n    exports: [\n        SongListComponent\n    ],\n    providers: [\n        SongService\n    ]\n})\n\nexport class SongModule {\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../environments/environment\";\nimport { Song, SongCollection } from \"./song.model\";\nimport { Observable } from \"rxjs/index\";\nimport { Paging } from \"../shared/paging.model\";\nimport { BaseService } from \"../shared/base.service\";\n\n@Injectable()\nexport class SongService extends BaseService {\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  getSongs(uri: string, filter: string, paging?: Paging): Observable<SongCollection> {\n    let parameter = this.getPagingForUrl(paging);\n    if (filter !== null && filter !== undefined && filter !== \"\") {\n      if (parameter === \"\") {\n        parameter = \"?filter=\" + filter;\n      } else {\n        parameter += \"&filter=\" + filter;\n      }\n    }\n    return this.http.get<SongCollection>(environment.restserver + uri + parameter);\n  }\n\n  getAllSongs(filter: string, paging?: Paging): Observable<SongCollection> {\n    let parameter = this.getPagingForUrl(paging);\n    if (filter !== null && filter !== undefined && filter !== \"\") {\n      if (parameter === \"\") {\n        parameter = \"?filter=\" + filter;\n      } else {\n        parameter += \"&filter=\" + filter;\n      }\n    }\n    return this.http.get<SongCollection>(environment.restserver + \"/api/song\" + parameter);\n  }\n\n  getAllSongsOfAlbum(id: string, paging?: Paging): Observable<SongCollection> {\n    return this.http.get<SongCollection>(environment.restserver + \"/api/album/\" + id + \"/songs\" + this.getPagingForUrl(paging));\n  }\n\n  getAllSongsOfArtist(id: string, paging?: Paging): Observable<SongCollection> {\n    return this.http.get<SongCollection>(environment.restserver + \"/api/artist/\" + id + \"/songs\" + this.getPagingForUrl(paging));\n  }\n\n  getAllSongsOfPlaylist(id: string, paging?: Paging): Observable<SongCollection> {\n    return this.http.get<SongCollection>(environment.restserver + \"/api/playlist/\" + id + \"/songs\" + this.getPagingForUrl(paging));\n  }\n\n  getAllSongsOfYear(id: string, paging?: Paging): Observable<SongCollection> {\n    return this.http.get<SongCollection>(environment.restserver + \"/api/info/year/\" + id + \"/songs\" + this.getPagingForUrl(paging));\n  }\n\n  getAllSongsOfGenre(id: string, paging?: Paging): Observable<SongCollection> {\n    return this.http.get<SongCollection>(environment.restserver + \"/api/info/genres/\" + id + \"/songs\" + this.getPagingForUrl(paging));\n  }\n\n  getSong(id: string): Observable<Song> {\n    return this.http.get<Song>(environment.restserver + \"/api/song/\" + id);\n  }\n\n  downloadAlbum(albumId: string) {\n    return this.http.get(environment.restserver + \"/api/album/\" + albumId + \"/download\", { responseType: \"blob\" });\n  }\n\n  downloadPlaylist(playlistId: string) {\n    return this.http.get(environment.restserver + \"/api/playlist/\" + playlistId + \"/download\", { responseType: \"blob\" });\n  }\n}\n","import {Component, Input, OnInit} from \"@angular/core\";\nimport {UserService} from \"./user.service\";\nimport {User} from \"./user.model\";\nimport {Playlist} from \"../playlist/playlist.model\";\nimport {isNullOrUndefined} from \"util\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.scss']\n})\nexport class UserDetailComponent implements OnInit {\n\n  user: User = new User(\"\", \"\", \"\", \"\");\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params) => {\n      if (params.get('id') !== \"new\") {\n        this.loadUser(params.get('id'));\n      }\n    });\n  }\n\n  resetFields(): void {\n    if (this.user.id === \"\") {\n      this.user = new User(\"\", \"\", \"\", \"\");\n    } else {\n      this.loadUser(this.user.id);\n    }\n  }\n\n  loadUser(id: string): void {\n    this.userService.getUser(id).subscribe((user: User) => {\n      this.user = user;\n    });\n  }\n\n  saveUser(): void {\n    this.userService.saveUser(this.user).subscribe(u => this.user = u);\n  }\n\n  deleteUser(): void {\n    this.userService.deleteUser(this.user.id).subscribe(() => {\n      this.router.navigate([\"/user\"]);\n    })\n  }\n}\n","<mat-card>\n  <mat-card-title>Edit User</mat-card-title>\n  <mat-card-content>\n    <form>\n      <div class=\"user-form\">\n        <mat-form-field>\n          <input matInput placeholder=\"Username\" name=\"username\" [(ngModel)]=\"user.username\">\n        </mat-form-field>\n        <mat-form-field>\n          <input matInput placeholder=\"EMail\" name=\"email\" [(ngModel)]=\"user.email\">\n        </mat-form-field>\n        <mat-form-field>\n          <mat-select placeholder=\"Role\" name=\"role\" [(ngModel)]=\"user.role\">\n            <mat-option value=\"user\">User</mat-option>\n            <mat-option value=\"admin\">Admin</mat-option>\n            <mat-option value=\"guest\">Guest</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </form>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button (click)=\"saveUser()\"><mat-icon>done</mat-icon>Save</button>\n    <button mat-button (click)=\"resetFields()\"><mat-icon>undo</mat-icon>Reset</button>\n    <button mat-button (click)=\"deleteUser()\" *ngIf=\"user.id !== ''\"><mat-icon>delete</mat-icon>Delete</button>\n    <button mat-button routerLink=\"/user\"><mat-icon>arrow_back</mat-icon>Userlist</button>\n  </mat-card-actions>\n</mat-card>\n","import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from \"@angular/core\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MatSort} from \"@angular/material/sort\";\nimport {fromEvent, merge} from \"rxjs\";\nimport {debounceTime, distinctUntilChanged, tap} from \"rxjs/operators\";\n\nimport {UserService} from \"./user.service\";\nimport {UserDataSource} from \"./user.datasource\";\nimport {Paging} from \"../shared/paging.model\";\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild('input', { static: true }) input: ElementRef;\n\n  dataSource: UserDataSource;\n\n  pageSize = 10;\n  pageSizeOptions = [5, 10, 20, 50];\n  total = 0;\n\n  displayedColumns = ['username', 'email', 'role'];\n\n  constructor(\n    private userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    if (localStorage.getItem(\"pageSize\")) {\n      this.pageSize = +localStorage.getItem(\"pageSize\");\n    }\n    this.dataSource = new UserDataSource(this.userService);\n\n    this.dataSource.loadUsers(\"\", new Paging(0, this.pageSize, \"username\", \"asc\"));\n    this.dataSource.userTotalSubject.subscribe(total => {\n      this.total = total;\n    });\n  }\n\n  ngAfterViewInit() {\n    // server-side search\n    fromEvent(this.input.nativeElement, 'keyup')\n      .pipe(\n        debounceTime(150),\n        distinctUntilChanged(),\n        tap(() => {\n          this.paginator.pageIndex = 0;\n          this.loadUsersPage();\n        })\n      )\n      .subscribe();\n\n    // reset the paginator after sorting\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        tap(() => this.loadUsersPage())\n      )\n      .subscribe();\n  }\n\n  loadUsersPage() {\n    localStorage.setItem(\"pageSize\", \"\" + this.paginator.pageSize);\n    this.dataSource.loadUsers(this.input.nativeElement.value, new Paging(\n      this.paginator.pageIndex,\n      this.paginator.pageSize,\n      this.sort.active,\n      this.sort.direction));\n  }\n}\n","<div class=\"user\">\n  <mat-form-field>\n    <mat-placeholder><mat-icon>search</mat-icon></mat-placeholder>\n    <input matInput #input>\n  </mat-form-field>\n  <button mat-button routerLink=\"/user/new\"><mat-icon>add</mat-icon>Add new user</button>\n  <div class=\"spinner-container\" *ngIf=\"dataSource.loading$ | async\">\n    <mat-spinner></mat-spinner>\n  </div>\n\n  <mat-table matSort #usertable [dataSource]=\"dataSource\" class=\"users-table\">\n    <ng-container matColumnDef=\"username\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Username</mat-header-cell>\n      <mat-cell *matCellDef=\"let user\"> <a mat-button routerLink=\"/user/{{user.id}}\"> {{user.username}} </a></mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"email\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>EMail</mat-header-cell>\n      <mat-cell *matCellDef=\"let user\"> {{user.email}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"role\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Role</mat-header-cell>\n      <mat-cell *matCellDef=\"let user\"> {{user.role}}</mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n\n  <mat-paginator #paginator\n                 [length]=\"total\"\n                 [pageSize]=\"pageSize\"\n                 [pageSizeOptions]=\"pageSizeOptions\"\n                 [showFirstLastButtons]=\"true\">\n  </mat-paginator>\n</div>\n","import {RouterModule, Routes} from \"@angular/router\";\nimport {AuthGuardService} from \"../security/auth-guard.service\";\nimport {NgModule} from \"@angular/core\";\nimport {UserListComponent} from \"./user-list.component\";\nimport {UserDetailComponent} from \"./user-detail.component\";\n\nconst userRoutes: Routes = [\n  { path: 'user', component: UserListComponent, canActivate: [AuthGuardService] },\n  { path: 'user/:id', component: UserDetailComponent, canActivate: [AuthGuardService] }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(userRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class UserRoutingModule {}\n","import {DataSource} from \"@angular/cdk/table\";\nimport {CollectionViewer} from \"@angular/cdk/collections\";\nimport {BehaviorSubject, Observable, of} from \"rxjs\";\nimport {Paging} from \"../shared/paging.model\";\nimport {catchError, finalize} from \"rxjs/operators\";\nimport {User, UserCollection} from \"./user.model\";\nimport {UserService} from \"./user.service\";\n\nexport class UserDataSource implements DataSource<User> {\n  private usersSubject = new BehaviorSubject<User[]>([]);\n  public userTotalSubject = new BehaviorSubject<number>(0);\n  private loadingSubject = new BehaviorSubject<boolean>(false);\n  public users: User[] = [];\n\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private userService: UserService) {\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<User[]> {\n    return this.usersSubject.asObservable();\n  }\n\n  disconnect(collectionViewer: CollectionViewer): void {\n    this.usersSubject.complete();\n    this.userTotalSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n  loadUsers(filter: string, paging: Paging) {\n    this.loadingSubject.next(true);\n\n    let usersObservable: Observable<UserCollection>;\n\n    usersObservable = this.userService.getUsers(filter, paging);\n    usersObservable\n      .pipe(\n        catchError(() => of(new UserCollection([], null, 0))),\n        finalize(() => this.loadingSubject.next(false))\n      )\n      .subscribe(userCollection => {\n        this.userTotalSubject.next(userCollection.total);\n        this.usersSubject.next(userCollection.users);\n        this.users = userCollection.users;\n      });\n  }\n}\n","import {Paging} from \"../shared/paging.model\";\nimport {Playlist} from \"../playlist/playlist.model\";\n\nexport class User {\n  constructor(\n    public id: string,\n    public username: string,\n    public role: string,\n    public email: string\n  ) {}\n}\n\nexport class UserCollection {\n  constructor(\n    public users: User[],\n    public paging: Paging,\n    public total: number\n  ) {}\n}\n","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {UserListComponent} from \"./user-list.component\";\nimport {UserDetailComponent} from \"./user-detail.component\";\nimport {UserService} from \"./user.service\";\nimport {RouterModule} from \"@angular/router\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {MatTableModule} from \"@angular/material/table\";\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    MatSortModule,\n    MatTableModule\n  ],\n  declarations: [\n    UserListComponent,\n    UserDetailComponent\n  ],\n  exports: [\n    UserListComponent\n  ],\n  providers: [UserService]\n})\n\nexport class UserModule {\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"../../environments/environment\";\nimport { Injectable } from \"@angular/core\";\nimport { User, UserCollection } from \"./user.model\";\nimport { Paging } from \"../shared/paging.model\";\nimport { BaseService } from \"../shared/base.service\";\n\n@Injectable()\nexport class UserService extends BaseService {\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  getUsers(filter: string, paging?: Paging): Observable<UserCollection> {\n    let parameter = this.getPagingForUrl(paging);\n    if (filter !== null && filter !== undefined && filter !== \"\") {\n      if (parameter === \"\") {\n        parameter = \"?filter=\" + filter;\n      } else {\n        parameter += \"&filter=\" + filter;\n      }\n    }\n    return this.http.get<UserCollection>(environment.restserver + \"/api/admin/user\" + parameter);\n  }\n\n  getUser(id: string): Observable<User> {\n    return this.http.get<User>(environment.restserver + \"/api/admin/user/\" + id);\n  }\n\n  saveUser(user: User): Observable<User> {\n    if (user.id === null || user.id === \"\") {\n      return this.http.post<User>(environment.restserver + \"/api/admin/user\", user);\n    } else {\n      return this.http.put<User>(environment.restserver + \"/api/admin/user\", user);\n    }\n  }\n  deleteUser(id: string): Observable<number> {\n    return this.http.delete<number>(environment.restserver + \"/api/admin/user/\" + id);\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  restserver: \"http://localhost:8080\"\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"names":["ChangeDetectorRef","i0","AppComponent","constructor","router","authService","playerService","bottomPlayerSheet","changeDetectorRef","media","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","localStorage","getItem","theme","isLoggedIn","subscribe","b","loadPlayqueue","ngOnDestroy","removeListener","currentTheme","setCurrentTheme","setItem","goHome","navigate","gotoConfig","gotoUsermanagement","logout","isAdmin","username","getLoggedInUsername","selectors","decls","vars","consts","$localize","ctx","ElementRef","MatPaginator","MatSort","fromEvent","merge","debounceTime","distinctUntilChanged","tap","ArtistDataSource","Paging","ArtistListComponent","route","artistService","name","title","obj","path","split","reduce","o","p","ngAfterViewInit","input","nativeElement","pipe","paginator","pageIndex","loadArtistsPage","sort","sortChange","page","ngOnInit","pageSize","dataSource","queryParams","params","filter","undefined","loadArtists","artistTotalSubject","total","artistsSubject","artists","length","artistId","value","active","direction","gotoSongs","artist","viewQuery","Application","Config","Database","Media","Server","ConfigComponent","configService","_location","getConfig","c","console","log","config","resetFields","databaseType","database","type","databaseSchema","schema","databaseUsername","databasePassword","password","databaseUrl","url","mediaPath","mediaSyncFrequency","syncfrequency","mediaSyncAtStart","syncatstart","serverPort","server","port","applicationMode","application","mode","applicationLoglevel","loglevel","applicationCors","cors","cancelClicked","back","saveConfig","db","message","template","saveAs","MatDialogConfig","PlaylistSelectDialogComponent","SongDataSource","SongListComponent","songService","playlistService","dialog","embedded","paramMap","has","kind","get","anyId","sortField","loadSongs","songTotalSubject","songDescriptionSubject","s","headline","loadSongsPage","playSong","song","addAndPlaySong","queueSong","addSong","queueSongs","songs","forEach","addSongToPlaylist","dialogConfig","disableClose","autoFocus","open","afterClosed","v","addSongsToPlaylist","songId","r","cellClicked","column","album","albumId","genre","downloadAlbum","data","error","downloadPlaylist","UserDataSource","UserListComponent","userService","loadUsers","userTotalSubject","loadUsersPage"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}